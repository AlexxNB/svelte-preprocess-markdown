import{S as n,i as e,s as a,e as t,b as r,d as o,g as s,h as l,j as c,k as p,v as m,n as i,o as d,x as h,K as f,C as u,t as g,a as v,f as $,U as w,r as y,z as E,A as k,q as x,N as b}from"./index.aa1d6d70.js";import{R as M}from"./Repl.2583b080.js";import"./commonjsHelpers.7e9f9d63.js";function I(n){var e,a,f;let u={orientation:"rows",readonly:n.readonly,embedded:!0};var g=new M({props:u});return n.repl_1_binding(g),{c(){e=t("div"),a=t("div"),g.$$.fragment.c(),this.h()},l(n){e=r(n,"DIV",{class:!0},!1);var t=o(e);a=r(t,"DIV",{class:!0},!1);var l=o(a);g.$$.fragment.l(l),l.forEach(s),t.forEach(s),this.h()},h(){l(a,"class","repl svelte-cgg22k"),l(e,"class","container svelte-cgg22k")},m(n,t){c(n,e,t),p(e,a),m(g,a,null),f=!0},p(n,e){var a={};n.readonly&&(a.readonly=e.readonly),g.$set(a)},i(n){f||(i(g.$$.fragment,n),f=!0)},o(n){d(g.$$.fragment,n),f=!1},d(a){a&&s(e),n.repl_1_binding(null),h(g)}}}function A(n,e,a){let t,{code:r="# Hello World!",readonly:o=!1,components:s=[{type:"md",name:"App",source:"# Hello World!"}]}=e;return a("components",s=s.map(n=>(n.source=n.source.trim(),n))),f(()=>{t.set({components:s})}),n.$set=(n=>{"code"in n&&a("code",r=n.code),"readonly"in n&&a("readonly",o=n.readonly),"components"in n&&a("components",s=n.components)}),{repl:t,code:r,readonly:o,components:s,repl_1_binding:function(n){u[n?"unshift":"push"](()=>{a("repl",t=n)})}}}class j extends n{constructor(n){super(),e(this,n,A,I,a,["code","readonly","components"])}}let S={type:"svelte",name:"Counter",source:'\n<script>\nlet count = 0;\n<\/script>\n\n<span class="counter">\n<span class="minus" on:click={e => count--}>-</span>\n<span class="value">{count}</span>\n<span class="plus" on:click={e => count++}>+</span>\n</span>\n\n<style>\n.counter{\nbackground-color: #f9ac00;\npadding: 2px;\nborder-radius:5px;\n}\n\n.value{\ndisplay: inline-block;\nbackground-color: white;\ntext-align: center;\npadding:0 5px;\nborder-radius:5px;\ncolor: black;\n}\n\n.minus,.plus{\ndisplay: inline-block;\ncolor: white;\nwidth:15px;\ntext-align: center;\nfont-weight: bold;\ncursor:pointer;\n}\n</style>\n'},D={type:"svelte",name:"Box",source:'\n<script>\nexport let color = "black";\n<\/script>\n\n<div style="background-color:{color}"><slot /></div>\n\n<style>\ndiv{\n  color: white;\n  border-radius:5px;\n  padding: 20px;\n  text-align: center;\n}\n</style>\n'};const T=[{type:"md",name:"App",source:"\n<script>\nlet name = 'World'\n<\/script>\n# Hello {name}!"}],H=[{type:"md",name:"App",source:"\n## Simplest component\n\nYou can write **any** `markdown` you want.\n\n|ID|Name|\n|--|----|\n|1 |John|\n"}],C=[{type:"md",name:"App",source:"\n<script>\n  let list = ['item0','item1'];\n  function add() { list = [...list,'item'+list.length] }\n  function del() { list = list.slice(0,-1) }\n<\/script>\n\n### My items\n\n{#each list as item}\n* {item}\n{/each}\n\n<button on:click={add}>Add Item</button>\n<button on:click={del}>Del Item</button>\n"}],B=[{type:"md",name:"App",source:"\n<script>\n  import Counter from './Counter.svelte'\n  import Box from './Box.svelte'\n<\/script>\n\n<Box color=\"orange\">\n   Hello, I'm **orange** box\n</Box>\n\nYou could inline <Counter /> components as well.\n"},S,D],O=[{type:"md",name:"App",source:"\n<script>\n  import Box from './Box.svelte';\n  import Submarkup from './Submarkup.md';\n<\/script>\n\n<Box color=\"slateblue\">\n   <Submarkup />\n</Box>\n"},{type:"md",name:"Submarkup",source:"\n# Hello\n\nI'm **blue** box\n"},D],_=[{type:"md",name:"App",source:"\nimport Counter from './Counter.svelte'\nimport Box from './Box.svelte'\n\n<Box color=\"silver\">\n   Hello, I'm **grey** box. Counter: <Counter />\n</Box>\n"},S,D],L=[{type:"md",name:"App",source:"\n# `h1` heading\n...\n##### `h5` heading\n\n*`em`* **`strong`**\n\n<style>\n  h1{\n    color:green;\n  }\n\n  strong{\n    color:red\n  }\n</style>\n"}],P=[{type:"md",name:"App",source:'\n---\ntitle: This is a title\nnumber: 100500\nlist: [1,2,3,"four","five"]\n---\n\n# {META.title}\n\nThe number is: {META.number}\n\n{#each META.list as item}\n* {item}\n{/each}\n'}];function Y(n){var e,a,f,u,w,y,E,k,x,b,M,I,A,S,D,H,C,B,O,_,L,P,Y,q,N,R,U,V,W,F,K,X,z,J,Q,G,Z,nn,en,an,tn,rn,on,sn,ln,cn,pn,mn,dn,hn=new j({props:{components:T}});return{c(){e=t("h1"),a=g("Introducing"),f=v(),u=t("p"),w=g("The "),y=t("a"),E=g("svelte-preprocess-markdown"),k=g(" is a way to use "),x=t("a"),b=g("Svelte"),M=g(" components written in Markdown syntax. You can import any "),I=t("code"),A=g("*.md"),S=g(" file as a component, which will be handeled by Svelte's compiler. You can import any other component in your "),D=t("code"),H=g("*.md"),C=g(" file and use it right inside a markup. All "),B=t("a"),O=g("HTMLx"),_=g(" logic and interpolations are also supported."),L=v(),P=t("p"),Y=g("The format of the "),q=t("em"),N=g("MarkDown"),R=g(" and "),U=t("em"),V=g("Svelte"),W=g(" combination is called "),F=t("code"),K=g("MDSv"),X=g(". It is like React's "),z=t("a"),J=g("MDX"),Q=g(" format, but for "),G=t("a"),Z=g("Svelte"),nn=g("."),en=v(),hn.$$.fragment.c(),an=v(),tn=t("blockquote"),rn=t("p"),on=g("You can try "),sn=t("code"),ln=g("svelte-preprocess-markdown"),cn=g(" in the fullpage "),pn=t("a"),mn=g("Playground"),this.h()},l(n){e=r(n,"H1",{},!1);var t=o(e);a=$(t,"Introducing"),t.forEach(s),f=$(n,"\n"),u=r(n,"P",{},!1);var l=o(u);w=$(l,"The "),y=r(l,"A",{href:!0,target:!0},!1);var c=o(y);E=$(c,"svelte-preprocess-markdown"),c.forEach(s),k=$(l," is a way to use "),x=r(l,"A",{href:!0,target:!0},!1);var p=o(x);b=$(p,"Svelte"),p.forEach(s),M=$(l," components written in Markdown syntax. You can import any "),I=r(l,"CODE",{},!1);var m=o(I);A=$(m,"*.md"),m.forEach(s),S=$(l," file as a component, which will be handeled by Svelte's compiler. You can import any other component in your "),D=r(l,"CODE",{},!1);var i=o(D);H=$(i,"*.md"),i.forEach(s),C=$(l," file and use it right inside a markup. All "),B=r(l,"A",{href:!0,target:!0},!1);var d=o(B);O=$(d,"HTMLx"),d.forEach(s),_=$(l," logic and interpolations are also supported."),l.forEach(s),L=$(n,"\n"),P=r(n,"P",{},!1);var h=o(P);Y=$(h,"The format of the "),q=r(h,"EM",{},!1);var g=o(q);N=$(g,"MarkDown"),g.forEach(s),R=$(h," and "),U=r(h,"EM",{},!1);var v=o(U);V=$(v,"Svelte"),v.forEach(s),W=$(h," combination is called "),F=r(h,"CODE",{},!1);var j=o(F);K=$(j,"MDSv"),j.forEach(s),X=$(h,". It is like React's "),z=r(h,"A",{href:!0,target:!0},!1);var T=o(z);J=$(T,"MDX"),T.forEach(s),Q=$(h," format, but for "),G=r(h,"A",{href:!0,target:!0},!1);var dn=o(G);Z=$(dn,"Svelte"),dn.forEach(s),nn=$(h,"."),h.forEach(s),en=$(n,"\n"),hn.$$.fragment.l(n),an=$(n,"\n"),tn=r(n,"BLOCKQUOTE",{},!1);var fn=o(tn);rn=r(fn,"P",{},!1);var un=o(rn);on=$(un,"You can try "),sn=r(un,"CODE",{},!1);var gn=o(sn);ln=$(gn,"svelte-preprocess-markdown"),gn.forEach(s),cn=$(un," in the fullpage "),pn=r(un,"A",{href:!0},!1);var vn=o(pn);mn=$(vn,"Playground"),vn.forEach(s),un.forEach(s),fn.forEach(s),this.h()},h(){l(y,"href","https://www.npmjs.com/package/svelte-preprocess-markdown"),l(y,"target","_blank"),l(x,"href","https://svelte.dev"),l(x,"target","_blank"),l(B,"href","https://github.com/htmlx-org/HTMLx"),l(B,"target","_blank"),l(z,"href","https://mdxjs.com/"),l(z,"target","_blank"),l(G,"href","https://svelte.dev"),l(G,"target","_blank"),l(pn,"href","/playground")},m(n,t){c(n,e,t),p(e,a),c(n,f,t),c(n,u,t),p(u,w),p(u,y),p(y,E),p(u,k),p(u,x),p(x,b),p(u,M),p(u,I),p(I,A),p(u,S),p(u,D),p(D,H),p(u,C),p(u,B),p(B,O),p(u,_),c(n,L,t),c(n,P,t),p(P,Y),p(P,q),p(q,N),p(P,R),p(P,U),p(U,V),p(P,W),p(P,F),p(F,K),p(P,X),p(P,z),p(z,J),p(P,Q),p(P,G),p(G,Z),p(P,nn),c(n,en,t),m(hn,n,t),c(n,an,t),c(n,tn,t),p(tn,rn),p(rn,on),p(rn,sn),p(sn,ln),p(rn,cn),p(rn,pn),p(pn,mn),dn=!0},p(n,e){var a={};n.Example1&&(a.components=T),hn.$set(a)},i(n){dn||(i(hn.$$.fragment,n),dn=!0)},o(n){d(hn.$$.fragment,n),dn=!1},d(n){n&&(s(e),s(f),s(u),s(L),s(P),s(en)),h(hn,n),n&&(s(an),s(tn))}}}function q(n){var e,a,m,i,d,h,f,u,E,k,x,b,M,I,A,j,S;return{c(){e=t("h1"),a=g("Install"),m=v(),i=t("ol"),d=t("li"),h=g("Install the package:"),f=v(),E=v(),k=t("ol"),x=t("li"),b=g("Then, edit "),M=t("code"),I=g("rollup.config.js"),A=g(" file:"),j=v(),this.h()},l(n){e=r(n,"H1",{},!1);var t=o(e);a=$(t,"Install"),t.forEach(s),m=$(n,"\n"),i=r(n,"OL",{},!1);var l=o(i);d=r(l,"LI",{},!1);var c=o(d);h=$(c,"Install the package:"),c.forEach(s),l.forEach(s),f=$(n,"\n"),E=$(n,"\n"),k=r(n,"OL",{start:!0},!1);var p=o(k);x=r(p,"LI",{},!1);var u=o(x);b=$(u,"Then, edit "),M=r(u,"CODE",{},!1);var g=o(M);I=$(g,"rollup.config.js"),g.forEach(s),A=$(u," file:"),u.forEach(s),p.forEach(s),j=$(n,"\n"),this.h()},h(){u=new w(N,E),l(k,"start","2"),S=new w(R,null)},m(n,t){c(n,e,t),p(e,a),c(n,m,t),c(n,i,t),p(i,d),p(d,h),c(n,f,t),u.m(n,t),c(n,E,t),c(n,k,t),p(k,x),p(x,b),p(x,M),p(M,I),p(x,A),c(n,j,t),S.m(n,t)},p:y,i:y,o:y,d(n){n&&(s(e),s(m),s(i),s(f),u.d(),s(E),s(k),s(j),S.d())}}}const N='<pre><code class="hljs language-bash">\nnpm i -D svelte-preprocess-markdown</code></pre>\n',R='<pre><code class="hljs language-js">\n<span class="hljs-comment">// 1. import package</span>\n<span class="hljs-keyword">const</span> &#123;markdown&#125; = <span class="hljs-built_in">require</span>(<span class="hljs-string">\'svelte-preprocess-markdown\'</span>);\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;\n  <span class="hljs-comment">// ...</span>\n  plugins: [\n    svelte(&#123;\n      <span class="hljs-comment">// 2. add \'.md\', to the extensions  </span>\n      extensions: [<span class="hljs-string">\'.svelte\'</span>,<span class="hljs-string">\'.md\'</span>],\n      <span class="hljs-comment">// 3. add markdown preprocessor</span>\n      preprocess: markdown()\n    &#125;)\n  ]\n&#125;</code></pre>\n';function U(n){var e,a,l,f,u,w,y,E,k,x,b,M,I,A,S,D,T,L,Y,q,N,R,U,V,W,F,K,X,z,J,Q,G,Z,nn,en,an,tn,rn,on,sn,ln,cn,pn,mn,dn,hn,fn,un,gn,vn,$n,wn,yn,En,kn=new j({props:{components:H}}),xn=new j({props:{components:C}}),bn=new j({props:{components:B}}),Mn=new j({props:{components:O}}),In=new j({props:{components:_}}),An=new j({props:{components:P}});return{c(){e=t("h1"),a=g("Usage"),l=v(),f=t("h3"),u=g("Simple markup"),w=v(),y=t("p"),E=g("First of all "),k=t("code"),x=g("MDSv"),b=g(" is markdown format. The simplest component is just a markdown synatax without any Svelte's magic."),M=v(),kn.$$.fragment.c(),I=v(),A=t("h3"),S=g("Components"),D=v(),T=t("p"),L=g("You can mix svelte and markdown as you want:"),Y=v(),xn.$$.fragment.c(),q=v(),N=t("h3"),R=g("Imports"),U=v(),V=t("p"),W=g("Import components and use it as usual:"),F=v(),bn.$$.fragment.c(),K=v(),X=t("p"),z=g("Import other "),J=t("code"),Q=g("*.md"),G=g(" files as well:"),Z=v(),Mn.$$.fragment.c(),nn=v(),en=t("p"),an=g("If there are only imports in the "),tn=t("code"),rn=g("<script>"),on=g(" tag, you may use simplified imports:"),sn=v(),In.$$.fragment.c(),ln=v(),cn=t("h3"),pn=g("Metadata"),mn=v(),dn=t("p"),hn=g("You can add some metadata at the top of the "),fn=t("em"),un=g("*.md"),gn=g(" file. All metadata will be available in "),vn=t("code"),$n=g("META"),wn=g(" constant:"),yn=v(),An.$$.fragment.c()},l(n){e=r(n,"H1",{},!1);var t=o(e);a=$(t,"Usage"),t.forEach(s),l=$(n,"\n"),f=r(n,"H3",{},!1);var c=o(f);u=$(c,"Simple markup"),c.forEach(s),w=$(n,"\n"),y=r(n,"P",{},!1);var p=o(y);E=$(p,"First of all "),k=r(p,"CODE",{},!1);var m=o(k);x=$(m,"MDSv"),m.forEach(s),b=$(p," is markdown format. The simplest component is just a markdown synatax without any Svelte's magic."),p.forEach(s),M=$(n,"\n"),kn.$$.fragment.l(n),I=$(n,"\n"),A=r(n,"H3",{},!1);var i=o(A);S=$(i,"Components"),i.forEach(s),D=$(n,"\n"),T=r(n,"P",{},!1);var d=o(T);L=$(d,"You can mix svelte and markdown as you want:"),d.forEach(s),Y=$(n,"\n"),xn.$$.fragment.l(n),q=$(n,"\n"),N=r(n,"H3",{},!1);var h=o(N);R=$(h,"Imports"),h.forEach(s),U=$(n,"\n"),V=r(n,"P",{},!1);var g=o(V);W=$(g,"Import components and use it as usual:"),g.forEach(s),F=$(n,"\n"),bn.$$.fragment.l(n),K=$(n,"\n"),X=r(n,"P",{},!1);var v=o(X);z=$(v,"Import other "),J=r(v,"CODE",{},!1);var j=o(J);Q=$(j,"*.md"),j.forEach(s),G=$(v," files as well:"),v.forEach(s),Z=$(n,"\n"),Mn.$$.fragment.l(n),nn=$(n,"\n"),en=r(n,"P",{},!1);var H=o(en);an=$(H,"If there are only imports in the "),tn=r(H,"CODE",{},!1);var C=o(tn);rn=$(C,"<script>"),C.forEach(s),on=$(H," tag, you may use simplified imports:"),H.forEach(s),sn=$(n,"\n"),In.$$.fragment.l(n),ln=$(n,"\n"),cn=r(n,"H3",{},!1);var B=o(cn);pn=$(B,"Metadata"),B.forEach(s),mn=$(n,"\n"),dn=r(n,"P",{},!1);var O=o(dn);hn=$(O,"You can add some metadata at the top of the "),fn=r(O,"EM",{},!1);var _=o(fn);un=$(_,"*.md"),_.forEach(s),gn=$(O," file. All metadata will be available in "),vn=r(O,"CODE",{},!1);var P=o(vn);$n=$(P,"META"),P.forEach(s),wn=$(O," constant:"),O.forEach(s),yn=$(n,"\n"),An.$$.fragment.l(n)},m(n,t){c(n,e,t),p(e,a),c(n,l,t),c(n,f,t),p(f,u),c(n,w,t),c(n,y,t),p(y,E),p(y,k),p(k,x),p(y,b),c(n,M,t),m(kn,n,t),c(n,I,t),c(n,A,t),p(A,S),c(n,D,t),c(n,T,t),p(T,L),c(n,Y,t),m(xn,n,t),c(n,q,t),c(n,N,t),p(N,R),c(n,U,t),c(n,V,t),p(V,W),c(n,F,t),m(bn,n,t),c(n,K,t),c(n,X,t),p(X,z),p(X,J),p(J,Q),p(X,G),c(n,Z,t),m(Mn,n,t),c(n,nn,t),c(n,en,t),p(en,an),p(en,tn),p(tn,rn),p(en,on),c(n,sn,t),m(In,n,t),c(n,ln,t),c(n,cn,t),p(cn,pn),c(n,mn,t),c(n,dn,t),p(dn,hn),p(dn,fn),p(fn,un),p(dn,gn),p(dn,vn),p(vn,$n),p(dn,wn),c(n,yn,t),m(An,n,t),En=!0},p(n,e){var a={};n.Example2&&(a.components=H),kn.$set(a);var t={};n.Example3&&(t.components=C),xn.$set(t);var r={};n.Example4&&(r.components=B),bn.$set(r);var o={};n.Example5&&(o.components=O),Mn.$set(o);var s={};n.Example6&&(s.components=_),In.$set(s);var l={};n.Example8&&(l.components=P),An.$set(l)},i(n){En||(i(kn.$$.fragment,n),i(xn.$$.fragment,n),i(bn.$$.fragment,n),i(Mn.$$.fragment,n),i(In.$$.fragment,n),i(An.$$.fragment,n),En=!0)},o(n){d(kn.$$.fragment,n),d(xn.$$.fragment,n),d(bn.$$.fragment,n),d(Mn.$$.fragment,n),d(In.$$.fragment,n),d(An.$$.fragment,n),En=!1},d(n){n&&(s(e),s(l),s(f),s(w),s(y),s(M)),h(kn,n),n&&(s(I),s(A),s(D),s(T),s(Y)),h(xn,n),n&&(s(q),s(N),s(U),s(V),s(F)),h(bn,n),n&&(s(K),s(X),s(Z)),h(Mn,n),n&&(s(nn),s(en),s(sn)),h(In,n),n&&(s(ln),s(cn),s(mn),s(dn),s(yn)),h(An,n)}}}function V(n){var e,a,f,u,w,y,E,k,x,b,M,I,A=new j({props:{components:L}});return{c(){e=t("h1"),a=g("Styling"),f=v(),u=t("p"),w=t("em"),y=g("Markdown"),E=g(" is being converted to the simple HTML-elements. If you want to style markdown markup, you should write selectors to corresponding HTML-elements. See the "),k=t("a"),x=g("Markdown"),b=g(" guide for more info."),M=v(),A.$$.fragment.c(),this.h()},l(n){e=r(n,"H1",{},!1);var t=o(e);a=$(t,"Styling"),t.forEach(s),f=$(n,"\n"),u=r(n,"P",{},!1);var l=o(u);w=r(l,"EM",{},!1);var c=o(w);y=$(c,"Markdown"),c.forEach(s),E=$(l," is being converted to the simple HTML-elements. If you want to style markdown markup, you should write selectors to corresponding HTML-elements. See the "),k=r(l,"A",{href:!0,target:!0},!1);var p=o(k);x=$(p,"Markdown"),p.forEach(s),b=$(l," guide for more info."),l.forEach(s),M=$(n,"\n"),A.$$.fragment.l(n),this.h()},h(){l(k,"href","https://www.markdownguide.org/basic-syntax/"),l(k,"target","_blank")},m(n,t){c(n,e,t),p(e,a),c(n,f,t),c(n,u,t),p(u,w),p(w,y),p(u,E),p(u,k),p(k,x),p(u,b),c(n,M,t),m(A,n,t),I=!0},p(n,e){var a={};n.Example7&&(a.components=L),A.$set(a)},i(n){I||(i(A.$$.fragment,n),I=!0)},o(n){d(A.$$.fragment,n),I=!1},d(n){n&&(s(e),s(f),s(u),s(M)),h(A,n)}}}var W=[class extends n{constructor(n){super(),e(this,n,null,Y,a,[])}},class extends n{constructor(n){super(),e(this,n,null,q,a,[])}},class extends n{constructor(n){super(),e(this,n,null,U,a,[])}},class extends n{constructor(n){super(),e(this,n,null,V,a,[])}}];function F(n,e,a){const t=Object.create(n);return t.page=e[a],t}function K(n){var e,a,p,f=n.page;if(f)var u=new f({});return{c(){u&&u.$$.fragment.c(),e=v(),a=t("div"),this.h()},l(n){u&&u.$$.fragment.l(n),e=$(n,"\n    "),a=r(n,"DIV",{class:!0},!1),o(a).forEach(s),this.h()},h(){l(a,"class","svelte-mvq4nw")},m(n,t){u&&m(u,n,t),c(n,e,t),c(n,a,t),p=!0},p(n,a){if(f!==(f=a.page)){if(u){E();const n=u;d(n.$$.fragment,1,0,()=>{h(n,1)}),k()}f?((u=new f({})).$$.fragment.c(),i(u.$$.fragment,1),m(u,e.parentNode,e)):u=null}},i(n){p||(u&&i(u.$$.fragment,n),p=!0)},o(n){u&&d(u.$$.fragment,n),p=!1},d(n){u&&h(u,n),n&&(s(e),s(a))}}}function X(n){for(var e,a,t=W,r=[],o=0;o<t.length;o+=1)r[o]=K(F(n,t,o));const l=n=>d(r[n],1,1,()=>{r[n]=null});return{c(){for(var n=0;n<r.length;n+=1)r[n].c();e=x()},l(n){for(var a=0;a<r.length;a+=1)r[a].l(n);e=x()},m(n,t){for(var o=0;o<r.length;o+=1)r[o].m(n,t);c(n,e,t),a=!0},p(n,a){if(n.pages){t=W;for(var o=0;o<t.length;o+=1){const s=F(a,t,o);r[o]?(r[o].p(n,s),i(r[o],1)):(r[o]=K(s),r[o].c(),i(r[o],1),r[o].m(e.parentNode,e))}for(E(),o=t.length;o<r.length;o+=1)l(o);k()}},i(n){if(!a){for(var e=0;e<t.length;e+=1)i(r[e]);a=!0}},o(n){r=r.filter(Boolean);for(let n=0;n<r.length;n+=1)d(r[n]);a=!1},d(n){b(r,n),n&&s(e)}}}class z extends n{constructor(n){super(),e(this,n,null,X,a,[])}}function J(n){var e,a,p=new z({});return{c(){e=t("div"),p.$$.fragment.c(),this.h()},l(n){e=r(n,"DIV",{class:!0},!1);var a=o(e);p.$$.fragment.l(a),a.forEach(s),this.h()},h(){l(e,"class","svelte-qau3fm")},m(n,t){c(n,e,t),m(p,e,null),a=!0},p:y,i(n){a||(i(p.$$.fragment,n),a=!0)},o(n){d(p.$$.fragment,n),a=!1},d(n){n&&s(e),h(p)}}}export default class extends n{constructor(n){super(),e(this,n,null,J,a,[])}}
