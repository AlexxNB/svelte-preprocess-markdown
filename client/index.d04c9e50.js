import{S as n,i as e,s as t,e as a,x as o,b as r,d as s,y as l,g as c,j as i,k as p,l as m,z as h,o as f,p as d,C as u,Q as g,J as v,t as $,a as w,f as y,h as k,v as E,a0 as b,E as x,F as M,r as I,U as j}from"./index.4682b6d0.js";import{R as A}from"./Repl.01943d3c.js";import"./commonjsHelpers.6c54ee37.js";function S(n){let e,t,g,v={orientation:"rows",readonly:n[0]};const $=new A({props:v});return n[3]($),{c(){e=a("div"),t=a("div"),o($.$$.fragment),this.h()},l(n){e=r(n,"DIV",{class:!0});var a=s(e);t=r(a,"DIV",{class:!0});var o=s(t);l($.$$.fragment,o),o.forEach(c),a.forEach(c),this.h()},h(){i(t,"class","repl svelte-cgg22k"),i(e,"class","container svelte-cgg22k")},m(n,a){p(n,e,a),m(e,t),h($,t,null),g=!0},p(n,[e]){const t={};1&e&&(t.readonly=n[0]),$.$set(t)},i(n){g||(f($.$$.fragment,n),g=!0)},o(n){d($.$$.fragment,n),g=!1},d(t){t&&c(e),n[3](null),u($)}}}function D(n,e,t){let a,{readonly:o=!1}=e,{components:r=[{type:"md",name:"App",source:"# Hello World!"}]}=e;return r=r.map(n=>(n.source=n.source.trim(),n)),g(()=>{a.set({components:r})}),n.$set=n=>{"readonly"in n&&t(0,o=n.readonly),"components"in n&&t(2,r=n.components)},[o,a,r,function(n){v[n?"unshift":"push"](()=>{t(1,a=n)})}]}class T extends n{constructor(n){super(),e(this,n,D,S,t,{readonly:0,components:2})}}let C={type:"svelte",name:"Counter",source:'\n<script>\nlet count = 0;\n<\/script>\n\n<span class="counter">\n<span class="minus" on:click={e => count--}>-</span>\n<span class="value">{count}</span>\n<span class="plus" on:click={e => count++}>+</span>\n</span>\n\n<style>\n.counter{\nbackground-color: #f9ac00;\npadding: 2px;\nborder-radius:5px;\n}\n\n.value{\ndisplay: inline-block;\nbackground-color: white;\ntext-align: center;\npadding:0 5px;\nborder-radius:5px;\ncolor: black;\n}\n\n.minus,.plus{\ndisplay: inline-block;\ncolor: white;\nwidth:15px;\ntext-align: center;\nfont-weight: bold;\ncursor:pointer;\n}\n</style>\n'},H={type:"svelte",name:"Box",source:'\n<script>\nexport let color = "black";\n<\/script>\n\n<div style="background-color:{color}"><slot /></div>\n\n<style>\ndiv{\n  color: white;\n  border-radius:5px;\n  padding: 20px;\n  text-align: center;\n}\n</style>\n'};const B=[{type:"md",name:"App",source:"\n<script>\nlet name = 'World'\n<\/script>\n# Hello {name}!"}],O=[{type:"md",name:"App",source:"\n## Simplest component\n\nYou can write **any** `markdown` you want.\n\n|ID|Name|\n|--|----|\n|1 |John|\n"}],L=[{type:"md",name:"App",source:"\n<script>\n  let list = ['item0','item1'];\n  function add() { list = [...list,'item'+list.length] }\n  function del() { list = list.slice(0,-1) }\n<\/script>\n\n### My items\n\n{#each list as item}\n* {item}\n{/each}\n\n<button on:click={add}>Add Item</button>\n<button on:click={del}>Del Item</button>\n"}],P=[{type:"md",name:"App",source:"\n<script>\n  import Counter from './Counter.svelte'\n  import Box from './Box.svelte'\n<\/script>\n\n<Box color=\"orange\">\n   Hello, I'm **orange** box\n</Box>\n\nYou could inline <Counter /> components as well.\n"},C,H],Y=[{type:"md",name:"App",source:"\n<script>\n  import Box from './Box.svelte';\n  import Submarkup from './Submarkup.md';\n<\/script>\n\n<Box color=\"slateblue\">\n   <Submarkup />\n</Box>\n"},{type:"md",name:"Submarkup",source:"\n# Hello\n\nI'm **blue** box\n"},H],_=[{type:"md",name:"App",source:"\nimport Counter from './Counter.svelte'\nimport Box from './Box.svelte'\n\n<Box color=\"silver\">\n   Hello, I'm **grey** box. Counter: <Counter />\n</Box>\n"},C,H],q=[{type:"md",name:"App",source:"\n# `h1` heading\n...\n##### `h5` heading\n\n*`em`* **`strong`**\n\n<style>\n  h1{\n    color:green;\n  }\n\n  strong{\n    color:red\n  }\n</style>\n"}],R=[{type:"md",name:"App",source:'\n---\ntitle: This is a title\nnumber: 100500\nlist: [1,2,3,"four","five"]\n---\n\n# {META.title}\n\nThe number is: {META.number}\n\n{#each META.list as item}\n* {item}\n{/each}\n'}];function U(n){let e,t,g,v,b,x,M,I,j,A,S,D,C,H,O,L,P,Y,_,q,R,U,V,F,N,J,Q,W,X,z,K,G,Z,nn,en,tn,an,on,rn,sn,ln,cn,pn,mn,hn,fn,dn,un,gn;const vn=new T({props:{components:B}});return{c(){e=a("h1"),t=$("Introducing"),g=w(),v=a("p"),b=$("The "),x=a("a"),M=$("svelte-preprocess-markdown"),I=$(" is a way to use "),j=a("a"),A=$("Svelte"),S=$(" components written in Markdown syntax. You can import any "),D=a("code"),C=$("*.md"),H=$(" file as a component, which will be handeled by Svelte's compiler. You can import any other component in your "),O=a("code"),L=$("*.md"),P=$(" file and use it right inside a markup. All "),Y=a("a"),_=$("HTMLx"),q=$(" logic and interpolations are also supported."),R=w(),U=a("p"),V=$("The format of the "),F=a("em"),N=$("MarkDown"),J=$(" and "),Q=a("em"),W=$("Svelte"),X=$(" combination is called "),z=a("code"),K=$("MDSv"),G=$(". It is like React's "),Z=a("a"),nn=$("MDX"),en=$(" format, but for "),tn=a("a"),an=$("Svelte"),on=$("."),rn=w(),o(vn.$$.fragment),sn=w(),ln=a("blockquote"),cn=a("p"),pn=$("You can try "),mn=a("code"),hn=$("svelte-preprocess-markdown"),fn=$(" in the fullpage "),dn=a("a"),un=$("Playground"),this.h()},l(n){e=r(n,"H1",{});var a=s(e);t=y(a,"Introducing"),a.forEach(c),g=k(n),v=r(n,"P",{});var o=s(v);b=y(o,"The "),x=r(o,"A",{href:!0,target:!0});var i=s(x);M=y(i,"svelte-preprocess-markdown"),i.forEach(c),I=y(o," is a way to use "),j=r(o,"A",{href:!0,target:!0});var p=s(j);A=y(p,"Svelte"),p.forEach(c),S=y(o," components written in Markdown syntax. You can import any "),D=r(o,"CODE",{});var m=s(D);C=y(m,"*.md"),m.forEach(c),H=y(o," file as a component, which will be handeled by Svelte's compiler. You can import any other component in your "),O=r(o,"CODE",{});var h=s(O);L=y(h,"*.md"),h.forEach(c),P=y(o," file and use it right inside a markup. All "),Y=r(o,"A",{href:!0,target:!0});var f=s(Y);_=y(f,"HTMLx"),f.forEach(c),q=y(o," logic and interpolations are also supported."),o.forEach(c),R=k(n),U=r(n,"P",{});var d=s(U);V=y(d,"The format of the "),F=r(d,"EM",{});var u=s(F);N=y(u,"MarkDown"),u.forEach(c),J=y(d," and "),Q=r(d,"EM",{});var $=s(Q);W=y($,"Svelte"),$.forEach(c),X=y(d," combination is called "),z=r(d,"CODE",{});var w=s(z);K=y(w,"MDSv"),w.forEach(c),G=y(d,". It is like React's "),Z=r(d,"A",{href:!0,target:!0});var E=s(Z);nn=y(E,"MDX"),E.forEach(c),en=y(d," format, but for "),tn=r(d,"A",{href:!0,target:!0});var T=s(tn);an=y(T,"Svelte"),T.forEach(c),on=y(d,"."),d.forEach(c),rn=k(n),l(vn.$$.fragment,n),sn=k(n),ln=r(n,"BLOCKQUOTE",{});var B=s(ln);cn=r(B,"P",{});var gn=s(cn);pn=y(gn,"You can try "),mn=r(gn,"CODE",{});var $n=s(mn);hn=y($n,"svelte-preprocess-markdown"),$n.forEach(c),fn=y(gn," in the fullpage "),dn=r(gn,"A",{href:!0});var wn=s(dn);un=y(wn,"Playground"),wn.forEach(c),gn.forEach(c),B.forEach(c),this.h()},h(){i(x,"href","https://www.npmjs.com/package/svelte-preprocess-markdown"),i(x,"target","_blank"),i(j,"href","https://svelte.dev"),i(j,"target","_blank"),i(Y,"href","https://github.com/htmlx-org/HTMLx"),i(Y,"target","_blank"),i(Z,"href","https://mdxjs.com/"),i(Z,"target","_blank"),i(tn,"href","https://svelte.dev"),i(tn,"target","_blank"),i(dn,"href","/playground")},m(n,a){p(n,e,a),m(e,t),p(n,g,a),p(n,v,a),m(v,b),m(v,x),m(x,M),m(v,I),m(v,j),m(j,A),m(v,S),m(v,D),m(D,C),m(v,H),m(v,O),m(O,L),m(v,P),m(v,Y),m(Y,_),m(v,q),p(n,R,a),p(n,U,a),m(U,V),m(U,F),m(F,N),m(U,J),m(U,Q),m(Q,W),m(U,X),m(U,z),m(z,K),m(U,G),m(U,Z),m(Z,nn),m(U,en),m(U,tn),m(tn,an),m(U,on),p(n,rn,a),h(vn,n,a),p(n,sn,a),p(n,ln,a),m(ln,cn),m(cn,pn),m(cn,mn),m(mn,hn),m(cn,fn),m(cn,dn),m(dn,un),gn=!0},p:E,i(n){gn||(f(vn.$$.fragment,n),gn=!0)},o(n){d(vn.$$.fragment,n),gn=!1},d(n){n&&c(e),n&&c(g),n&&c(v),n&&c(R),n&&c(U),n&&c(rn),u(vn,n),n&&c(sn),n&&c(ln)}}}function V(n){let e,t,o,l,h,f,d,u,g,v,x,M,I,j,A,S,D;return{c(){e=a("h1"),t=$("Install"),o=w(),l=a("ol"),h=a("li"),f=$("Install the package:"),d=w(),g=w(),v=a("ol"),x=a("li"),M=$("Then, edit "),I=a("code"),j=$("rollup.config.js"),A=$(" file:"),S=w(),this.h()},l(n){e=r(n,"H1",{});var a=s(e);t=y(a,"Install"),a.forEach(c),o=k(n),l=r(n,"OL",{});var i=s(l);h=r(i,"LI",{});var p=s(h);f=y(p,"Install the package:"),p.forEach(c),i.forEach(c),d=k(n),g=k(n),v=r(n,"OL",{start:!0});var m=s(v);x=r(m,"LI",{});var u=s(x);M=y(u,"Then, edit "),I=r(u,"CODE",{});var $=s(I);j=y($,"rollup.config.js"),$.forEach(c),A=y(u," file:"),u.forEach(c),m.forEach(c),S=k(n),this.h()},h(){u=new b(F,g),i(v,"start","2"),D=new b(N,null)},m(n,a){p(n,e,a),m(e,t),p(n,o,a),p(n,l,a),m(l,h),m(h,f),p(n,d,a),u.m(n,a),p(n,g,a),p(n,v,a),m(v,x),m(x,M),m(x,I),m(I,j),m(x,A),p(n,S,a),D.m(n,a)},p:E,i:E,o:E,d(n){n&&c(e),n&&c(o),n&&c(l),n&&c(d),n&&u.d(),n&&c(g),n&&c(v),n&&c(S),n&&D.d()}}}const F='<pre><code class="hljs language-bash">\nnpm i -D svelte-preprocess-markdown</code></pre>\n',N='<pre><code class="hljs language-js">\n<span class="hljs-comment">// 1. import package</span>\n<span class="hljs-keyword">const</span> &#123;markdown&#125; = <span class="hljs-built_in">require</span>(<span class="hljs-string">\'svelte-preprocess-markdown\'</span>);\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;\n  <span class="hljs-comment">// ...</span>\n  <span class="hljs-attr">plugins</span>: [\n    svelte(&#123;\n      <span class="hljs-comment">// 2. add \'.md\', to the extensions  </span>\n      <span class="hljs-attr">extensions</span>: [<span class="hljs-string">\'.svelte\'</span>,<span class="hljs-string">\'.md\'</span>],\n      <span class="hljs-comment">// 3. add markdown preprocessor</span>\n      <span class="hljs-attr">preprocess</span>: markdown()\n    &#125;)\n  ]\n&#125;</code></pre>\n';function J(n){let e,t,i,g,v,b,x,M,I,j,A,S,D,C,H,B,q,U,V,F,N,J,Q,W,X,z,K,G,Z,nn,en,tn,an,on,rn,sn,ln,cn,pn,mn,hn,fn,dn,un,gn,vn,$n,wn,yn,kn,En,bn,xn,Mn;const In=new T({props:{components:O}}),jn=new T({props:{components:L}}),An=new T({props:{components:P}}),Sn=new T({props:{components:Y}}),Dn=new T({props:{components:_}}),Tn=new T({props:{components:R}});return{c(){e=a("h1"),t=$("Usage"),i=w(),g=a("h3"),v=$("Simple markup"),b=w(),x=a("p"),M=$("First of all "),I=a("code"),j=$("MDSv"),A=$(" is markdown format. The simplest component is just a markdown synatax without any Svelte's magic."),S=w(),o(In.$$.fragment),D=w(),C=a("h3"),H=$("Components"),B=w(),q=a("p"),U=$("You can mix svelte and markdown as you want:"),V=w(),o(jn.$$.fragment),F=w(),N=a("h3"),J=$("Imports"),Q=w(),W=a("p"),X=$("Import components and use it as usual:"),z=w(),o(An.$$.fragment),K=w(),G=a("p"),Z=$("Import other "),nn=a("code"),en=$("*.md"),tn=$(" files as well:"),an=w(),o(Sn.$$.fragment),on=w(),rn=a("p"),sn=$("If there are only imports in the "),ln=a("code"),cn=$("<script>"),pn=$(" tag, you may use simplified imports:"),mn=w(),o(Dn.$$.fragment),hn=w(),fn=a("h3"),dn=$("Metadata"),un=w(),gn=a("p"),vn=$("You can add some metadata at the top of the "),$n=a("em"),wn=$("*.md"),yn=$(" file. All metadata will be available in "),kn=a("code"),En=$("META"),bn=$(" constant:"),xn=w(),o(Tn.$$.fragment)},l(n){e=r(n,"H1",{});var a=s(e);t=y(a,"Usage"),a.forEach(c),i=k(n),g=r(n,"H3",{});var o=s(g);v=y(o,"Simple markup"),o.forEach(c),b=k(n),x=r(n,"P",{});var p=s(x);M=y(p,"First of all "),I=r(p,"CODE",{});var m=s(I);j=y(m,"MDSv"),m.forEach(c),A=y(p," is markdown format. The simplest component is just a markdown synatax without any Svelte's magic."),p.forEach(c),S=k(n),l(In.$$.fragment,n),D=k(n),C=r(n,"H3",{});var h=s(C);H=y(h,"Components"),h.forEach(c),B=k(n),q=r(n,"P",{});var f=s(q);U=y(f,"You can mix svelte and markdown as you want:"),f.forEach(c),V=k(n),l(jn.$$.fragment,n),F=k(n),N=r(n,"H3",{});var d=s(N);J=y(d,"Imports"),d.forEach(c),Q=k(n),W=r(n,"P",{});var u=s(W);X=y(u,"Import components and use it as usual:"),u.forEach(c),z=k(n),l(An.$$.fragment,n),K=k(n),G=r(n,"P",{});var $=s(G);Z=y($,"Import other "),nn=r($,"CODE",{});var w=s(nn);en=y(w,"*.md"),w.forEach(c),tn=y($," files as well:"),$.forEach(c),an=k(n),l(Sn.$$.fragment,n),on=k(n),rn=r(n,"P",{});var E=s(rn);sn=y(E,"If there are only imports in the "),ln=r(E,"CODE",{});var T=s(ln);cn=y(T,"<script>"),T.forEach(c),pn=y(E," tag, you may use simplified imports:"),E.forEach(c),mn=k(n),l(Dn.$$.fragment,n),hn=k(n),fn=r(n,"H3",{});var O=s(fn);dn=y(O,"Metadata"),O.forEach(c),un=k(n),gn=r(n,"P",{});var L=s(gn);vn=y(L,"You can add some metadata at the top of the "),$n=r(L,"EM",{});var P=s($n);wn=y(P,"*.md"),P.forEach(c),yn=y(L," file. All metadata will be available in "),kn=r(L,"CODE",{});var Y=s(kn);En=y(Y,"META"),Y.forEach(c),bn=y(L," constant:"),L.forEach(c),xn=k(n),l(Tn.$$.fragment,n)},m(n,a){p(n,e,a),m(e,t),p(n,i,a),p(n,g,a),m(g,v),p(n,b,a),p(n,x,a),m(x,M),m(x,I),m(I,j),m(x,A),p(n,S,a),h(In,n,a),p(n,D,a),p(n,C,a),m(C,H),p(n,B,a),p(n,q,a),m(q,U),p(n,V,a),h(jn,n,a),p(n,F,a),p(n,N,a),m(N,J),p(n,Q,a),p(n,W,a),m(W,X),p(n,z,a),h(An,n,a),p(n,K,a),p(n,G,a),m(G,Z),m(G,nn),m(nn,en),m(G,tn),p(n,an,a),h(Sn,n,a),p(n,on,a),p(n,rn,a),m(rn,sn),m(rn,ln),m(ln,cn),m(rn,pn),p(n,mn,a),h(Dn,n,a),p(n,hn,a),p(n,fn,a),m(fn,dn),p(n,un,a),p(n,gn,a),m(gn,vn),m(gn,$n),m($n,wn),m(gn,yn),m(gn,kn),m(kn,En),m(gn,bn),p(n,xn,a),h(Tn,n,a),Mn=!0},p:E,i(n){Mn||(f(In.$$.fragment,n),f(jn.$$.fragment,n),f(An.$$.fragment,n),f(Sn.$$.fragment,n),f(Dn.$$.fragment,n),f(Tn.$$.fragment,n),Mn=!0)},o(n){d(In.$$.fragment,n),d(jn.$$.fragment,n),d(An.$$.fragment,n),d(Sn.$$.fragment,n),d(Dn.$$.fragment,n),d(Tn.$$.fragment,n),Mn=!1},d(n){n&&c(e),n&&c(i),n&&c(g),n&&c(b),n&&c(x),n&&c(S),u(In,n),n&&c(D),n&&c(C),n&&c(B),n&&c(q),n&&c(V),u(jn,n),n&&c(F),n&&c(N),n&&c(Q),n&&c(W),n&&c(z),u(An,n),n&&c(K),n&&c(G),n&&c(an),u(Sn,n),n&&c(on),n&&c(rn),n&&c(mn),u(Dn,n),n&&c(hn),n&&c(fn),n&&c(un),n&&c(gn),n&&c(xn),u(Tn,n)}}}function Q(n){let e,t,g,v,b,x,M,I,j,A,S,D;const C=new T({props:{components:q}});return{c(){e=a("h1"),t=$("Styling"),g=w(),v=a("p"),b=a("em"),x=$("Markdown"),M=$(" is being converted to the simple HTML-elements. If you want to style markdown markup, you should write selectors to corresponding HTML-elements. See the "),I=a("a"),j=$("Markdown"),A=$(" guide for more info."),S=w(),o(C.$$.fragment),this.h()},l(n){e=r(n,"H1",{});var a=s(e);t=y(a,"Styling"),a.forEach(c),g=k(n),v=r(n,"P",{});var o=s(v);b=r(o,"EM",{});var i=s(b);x=y(i,"Markdown"),i.forEach(c),M=y(o," is being converted to the simple HTML-elements. If you want to style markdown markup, you should write selectors to corresponding HTML-elements. See the "),I=r(o,"A",{href:!0,target:!0});var p=s(I);j=y(p,"Markdown"),p.forEach(c),A=y(o," guide for more info."),o.forEach(c),S=k(n),l(C.$$.fragment,n),this.h()},h(){i(I,"href","https://www.markdownguide.org/basic-syntax/"),i(I,"target","_blank")},m(n,a){p(n,e,a),m(e,t),p(n,g,a),p(n,v,a),m(v,b),m(b,x),m(v,M),m(v,I),m(I,j),m(v,A),p(n,S,a),h(C,n,a),D=!0},p:E,i(n){D||(f(C.$$.fragment,n),D=!0)},o(n){d(C.$$.fragment,n),D=!1},d(n){n&&c(e),n&&c(g),n&&c(v),n&&c(S),u(C,n)}}}var W=[class extends n{constructor(n){super(),e(this,n,null,U,t,{})}},class extends n{constructor(n){super(),e(this,n,null,V,t,{})}},class extends n{constructor(n){super(),e(this,n,null,J,t,{})}},class extends n{constructor(n){super(),e(this,n,null,Q,t,{})}}];function X(n,e,t){const a=n.slice();return a[0]=e[t],a}function z(n){let e,t,m;var g=n[0];if(g)var v=new g({});return{c(){v&&o(v.$$.fragment),e=w(),t=a("div"),this.h()},l(n){v&&l(v.$$.fragment,n),e=k(n),t=r(n,"DIV",{class:!0}),s(t).forEach(c),this.h()},h(){i(t,"class","svelte-mvq4nw")},m(n,a){v&&h(v,n,a),p(n,e,a),p(n,t,a),m=!0},p(n,t){if(g!==(g=n[0])){if(v){x();const n=v;d(n.$$.fragment,1,0,()=>{u(n,1)}),M()}g?(v=new g({}),o(v.$$.fragment),f(v.$$.fragment,1),h(v,e.parentNode,e)):v=null}},i(n){m||(v&&f(v.$$.fragment,n),m=!0)},o(n){v&&d(v.$$.fragment,n),m=!1},d(n){v&&u(v,n),n&&c(e),n&&c(t)}}}function K(n){let e,t,a=W,o=[];for(let e=0;e<a.length;e+=1)o[e]=z(X(n,a,e));const r=n=>d(o[n],1,1,()=>{o[n]=null});return{c(){for(let n=0;n<o.length;n+=1)o[n].c();e=I()},l(n){for(let e=0;e<o.length;e+=1)o[e].l(n);e=I()},m(n,a){for(let e=0;e<o.length;e+=1)o[e].m(n,a);p(n,e,a),t=!0},p(n,[t]){if(0&t){let s;for(a=W,s=0;s<a.length;s+=1){const r=X(n,a,s);o[s]?(o[s].p(r,t),f(o[s],1)):(o[s]=z(r),o[s].c(),f(o[s],1),o[s].m(e.parentNode,e))}for(x(),s=a.length;s<o.length;s+=1)r(s);M()}},i(n){if(!t){for(let n=0;n<a.length;n+=1)f(o[n]);t=!0}},o(n){o=o.filter(Boolean);for(let n=0;n<o.length;n+=1)d(o[n]);t=!1},d(n){j(o,n),n&&c(e)}}}class G extends n{constructor(n){super(),e(this,n,null,K,t,{})}}function Z(n){let e,t;const m=new G({});return{c(){e=a("div"),o(m.$$.fragment),this.h()},l(n){e=r(n,"DIV",{class:!0});var t=s(e);l(m.$$.fragment,t),t.forEach(c),this.h()},h(){i(e,"class","svelte-qau3fm")},m(n,a){p(n,e,a),h(m,e,null),t=!0},p:E,i(n){t||(f(m.$$.fragment,n),t=!0)},o(n){d(m.$$.fragment,n),t=!1},d(n){n&&c(e),u(m)}}}export default class extends n{constructor(n){super(),e(this,n,null,Z,t,{})}}
