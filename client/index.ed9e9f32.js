import{S as n,i as e,s as r,e as o,b as a,d as t,g as s,h as l,j as c,k as p,v as m,n as i,o as h,x as d,K as f,C as u,t as v,a as g,f as $,r as w,z as E,A as y,q as k,N as x}from"./index.3cd0a8cf.js";import{R as b}from"./Repl.40b143af.js";import"./commonjsHelpers.7e9f9d63.js";function S(n){var e,r,f;let u={orientation:"rows",readonly:n.readonly,embedded:!0};var v=new b({props:u});return n.repl_1_binding(v),{c(){e=o("div"),r=o("div"),v.$$.fragment.c(),this.h()},l(n){e=a(n,"DIV",{class:!0},!1);var o=t(e);r=a(o,"DIV",{class:!0},!1);var l=t(r);v.$$.fragment.l(l),l.forEach(s),o.forEach(s),this.h()},h(){l(r,"class","repl svelte-cgg22k"),l(e,"class","container svelte-cgg22k")},m(n,o){c(n,e,o),p(e,r),m(v,r,null),f=!0},p(n,e){var r={};n.readonly&&(r.readonly=e.readonly),v.$set(r)},i(n){f||(i(v.$$.fragment,n),f=!0)},o(n){h(v.$$.fragment,n),f=!1},d(r){r&&s(e),n.repl_1_binding(null),d(v)}}}function A(n,e,r){let o,{code:a="# Hello World!",readonly:t=!1,components:s=[{type:"md",name:"App",source:"# Hello World!"}]}=e;return r("components",s=s.map(n=>(n.source=n.source.trim(),n))),f(()=>{o.set({components:s})}),n.$set=(n=>{"code"in n&&r("code",a=n.code),"readonly"in n&&r("readonly",t=n.readonly),"components"in n&&r("components",s=n.components)}),{repl:o,code:a,readonly:t,components:s,repl_1_binding:function(n){u[n?"unshift":"push"](()=>{r("repl",o=n)})}}}class I extends n{constructor(n){super(),e(this,n,A,S,r,["code","readonly","components"])}}let j={type:"svelte",name:"Counter",source:'\n<script>\nlet count = 0;\n<\/script>\n\n<span class="counter">\n<span class="minus" on:click={e => count--}>-</span>\n<span class="value">{count}</span>\n<span class="plus" on:click={e => count++}>+</span>\n</span>\n\n<style>\n.counter{\nbackground-color: #f9ac00;\npadding: 2px;\nborder-radius:5px;\n}\n\n.value{\ndisplay: inline-block;\nbackground-color: white;\ntext-align: center;\npadding:0 5px;\nborder-radius:5px;\ncolor: black;\n}\n\n.minus,.plus{\ndisplay: inline-block;\ncolor: white;\nwidth:15px;\ntext-align: center;\nfont-weight: bold;\ncursor:pointer;\n}\n</style>\n'},D={type:"svelte",name:"Box",source:'\n<script>\nexport let color = "black";\n<\/script>\n\n<div style="background-color:{color}"><slot /></div>\n\n<style>\ndiv{\n  color: white;\n  border-radius:5px;\n  padding: 20px;\n  text-align: center;\n}\n</style>\n'};const M=[{type:"md",name:"App",source:"\n<script>\nlet name = 'World'\n<\/script>\n# Hello {name}!"}],P=[{type:"md",name:"App",source:"\n## Simplest component\n\nYou can write **any** `markdown` you want.\n\n|ID|Name|\n|--|----|\n|1 |John|\n"}],C=[{type:"md",name:"App",source:"\n<script>\n  let list = ['item0','item1'];\n  function add() { list = [...list,'item'+list.length] }\n  function del() { list = list.slice(0,-1) }\n<\/script>\n\n### My items\n\n{#each list as item}\n* {item}\n{/each}\n\n<button on:click={add}>Add Item</button>\n<button on:click={del}>Del Item</button>\n"}],H=[{type:"md",name:"App",source:"\n<script>\n  import Counter from './Counter.svelte'\n  import Box from './Box.svelte'\n<\/script>\n\n<Box color=\"orange\">\n   Hello, I'm **orange** box\n</Box>\n\nYou could inline <Counter /> components as well.\n"},j,D],T=[{type:"md",name:"App",source:"\n<script>\n  import Box from './Box.svelte';\n  import Submarkup from './Submarkup.md';\n<\/script>\n\n<Box color=\"slateblue\">\n   <Submarkup />\n</Box>\n"},{type:"md",name:"Submarkup",source:"\n# Hello\n\nI'm **blue** box\n"},D],B=[{type:"md",name:"App",source:"\nimport Counter from './Counter.svelte'\nimport Box from './Box.svelte'\n\n<Box color=\"silver\">\n   Hello, I'm **grey** box. Counter: <Counter />\n</Box>\n"},j,D],N=[{type:"md",name:"App",source:"\n# `h1` heading\n...\n##### `h5` heading\n\n*`em`* **`strong`**\n\n<style>\n  h1{\n    color:green;\n  }\n\n  strong{\n    color:red\n  }\n</style>\n"}];function O(n){var e,r,f,u,w,E,y,k,x,b,S,A,j,D,P,C,H,T,B,N,O,L,Y,_,q,R,V,U,W,F,K,X,z,J,Q,G,Z,nn,en,rn,on,an,tn,sn,ln,cn,pn,mn,hn,dn=new I({props:{components:M}});return{c(){e=o("h1"),r=v("Introducing"),f=g(),u=o("p"),w=v("The "),E=o("a"),y=v("svelte-preprocess-markdown"),k=v(" is a way to use "),x=o("a"),b=v("Svelte"),S=v(" components written in Markdown syntax. You can import any "),A=o("code"),j=v("*.md"),D=v(" file as a component, which will be handeled by Svelte's compiler. You can import any other component in your "),P=o("code"),C=v("*.md"),H=v(" file and use it right inside a markup. All "),T=o("a"),B=v("HTMLx"),N=v(" logic and interpolations are also supported."),O=g(),L=o("p"),Y=v("The format of the "),_=o("em"),q=v("MarkDown"),R=v(" and "),V=o("em"),U=v("Svelte"),W=v(" combination is called "),F=o("code"),K=v("MDSv"),X=v(". It is like React's "),z=o("a"),J=v("MDX"),Q=v(" format, but for "),G=o("a"),Z=v("Svelte"),nn=v("."),en=g(),dn.$$.fragment.c(),rn=g(),on=o("blockquote"),an=o("p"),tn=v("You can try "),sn=o("code"),ln=v("svelte-preprocess-markdown"),cn=v(" in the fullpage "),pn=o("a"),mn=v("Playground"),this.h()},l(n){e=a(n,"H1",{},!1);var o=t(e);r=$(o,"Introducing"),o.forEach(s),f=$(n,"\n"),u=a(n,"P",{},!1);var l=t(u);w=$(l,"The "),E=a(l,"A",{href:!0},!1);var c=t(E);y=$(c,"svelte-preprocess-markdown"),c.forEach(s),k=$(l," is a way to use "),x=a(l,"A",{href:!0},!1);var p=t(x);b=$(p,"Svelte"),p.forEach(s),S=$(l," components written in Markdown syntax. You can import any "),A=a(l,"CODE",{},!1);var m=t(A);j=$(m,"*.md"),m.forEach(s),D=$(l," file as a component, which will be handeled by Svelte's compiler. You can import any other component in your "),P=a(l,"CODE",{},!1);var i=t(P);C=$(i,"*.md"),i.forEach(s),H=$(l," file and use it right inside a markup. All "),T=a(l,"A",{href:!0},!1);var h=t(T);B=$(h,"HTMLx"),h.forEach(s),N=$(l," logic and interpolations are also supported."),l.forEach(s),O=$(n,"\n"),L=a(n,"P",{},!1);var d=t(L);Y=$(d,"The format of the "),_=a(d,"EM",{},!1);var v=t(_);q=$(v,"MarkDown"),v.forEach(s),R=$(d," and "),V=a(d,"EM",{},!1);var g=t(V);U=$(g,"Svelte"),g.forEach(s),W=$(d," combination is called "),F=a(d,"CODE",{},!1);var I=t(F);K=$(I,"MDSv"),I.forEach(s),X=$(d,". It is like React's "),z=a(d,"A",{href:!0},!1);var M=t(z);J=$(M,"MDX"),M.forEach(s),Q=$(d," format, but for "),G=a(d,"A",{href:!0},!1);var hn=t(G);Z=$(hn,"Svelte"),hn.forEach(s),nn=$(d,"."),d.forEach(s),en=$(n,"\n"),dn.$$.fragment.l(n),rn=$(n,"\n"),on=a(n,"BLOCKQUOTE",{},!1);var fn=t(on);an=a(fn,"P",{},!1);var un=t(an);tn=$(un,"You can try "),sn=a(un,"CODE",{},!1);var vn=t(sn);ln=$(vn,"svelte-preprocess-markdown"),vn.forEach(s),cn=$(un," in the fullpage "),pn=a(un,"A",{href:!0},!1);var gn=t(pn);mn=$(gn,"Playground"),gn.forEach(s),un.forEach(s),fn.forEach(s),this.h()},h(){l(E,"href","https://www.npmjs.com/package/svelte-preprocess-markdown"),l(x,"href","https://svelte.dev"),l(T,"href","https://github.com/htmlx-org/HTMLx"),l(z,"href","https://mdxjs.com/"),l(G,"href","https://svelte.dev"),l(pn,"href","/playground")},m(n,o){c(n,e,o),p(e,r),c(n,f,o),c(n,u,o),p(u,w),p(u,E),p(E,y),p(u,k),p(u,x),p(x,b),p(u,S),p(u,A),p(A,j),p(u,D),p(u,P),p(P,C),p(u,H),p(u,T),p(T,B),p(u,N),c(n,O,o),c(n,L,o),p(L,Y),p(L,_),p(_,q),p(L,R),p(L,V),p(V,U),p(L,W),p(L,F),p(F,K),p(L,X),p(L,z),p(z,J),p(L,Q),p(L,G),p(G,Z),p(L,nn),c(n,en,o),m(dn,n,o),c(n,rn,o),c(n,on,o),p(on,an),p(an,tn),p(an,sn),p(sn,ln),p(an,cn),p(an,pn),p(pn,mn),hn=!0},p(n,e){var r={};n.Example1&&(r.components=M),dn.$set(r)},i(n){hn||(i(dn.$$.fragment,n),hn=!0)},o(n){h(dn.$$.fragment,n),hn=!1},d(n){n&&(s(e),s(f),s(u),s(O),s(L),s(en)),d(dn,n),n&&(s(rn),s(on))}}}function L(n){var e,r,m,i,h,d,f,u,E,y,k,x,b,S,A,I,j,D,M,P,C,H,T,B,N,O,L,Y,_,q,R,V,U,W,F,K,X,z,J,Q,G,Z,nn,en,rn,on,an,tn,sn,ln,cn,pn,mn;return{c(){e=o("h1"),r=v("Install"),m=g(),i=o("ol"),h=o("li"),d=v("Install the package:"),f=g(),u=o("pre"),E=o("code"),y=v("npm i -D svelte-preprocess-markdown"),k=g(),x=o("ol"),b=o("li"),S=v("Then, edit "),A=o("code"),I=v("rollup.config.js"),j=v(" file:"),D=g(),M=o("pre"),P=o("code"),C=o("span"),H=v("// 1. import package"),T=v("\n"),B=o("span"),N=v("const"),O=v(" {markdown} = "),L=o("span"),Y=v("require"),_=v("("),q=o("span"),R=v("'svelte-preprocess-markdown'"),V=v(");\n\n"),U=o("span"),W=v("export"),F=v(" "),K=o("span"),X=v("default"),z=v(" {\n  "),J=o("span"),Q=v("// ..."),G=v("\n  plugins: [\n    svelte({\n      "),Z=o("span"),nn=v("// 2. add '.md', to the extensions"),en=v("\n      extensions: ["),rn=o("span"),on=v("'.svelte'"),an=v(","),tn=o("span"),sn=v("'.md'"),ln=v("],\n      "),cn=o("span"),pn=v("// 3. add markdown preprocessor"),mn=v("\n      preprocess: markdown()\n    })\n  ]\n}"),this.h()},l(n){e=a(n,"H1",{},!1);var o=t(e);r=$(o,"Install"),o.forEach(s),m=$(n,"\n"),i=a(n,"OL",{},!1);var l=t(i);h=a(l,"LI",{},!1);var c=t(h);d=$(c,"Install the package:"),c.forEach(s),l.forEach(s),f=$(n,"\n"),u=a(n,"PRE",{},!1);var p=t(u);E=a(p,"CODE",{class:!0},!1);var v=t(E);y=$(v,"npm i -D svelte-preprocess-markdown"),v.forEach(s),p.forEach(s),k=$(n,"\n\n"),x=a(n,"OL",{start:!0},!1);var g=t(x);b=a(g,"LI",{},!1);var w=t(b);S=$(w,"Then, edit "),A=a(w,"CODE",{},!1);var hn=t(A);I=$(hn,"rollup.config.js"),hn.forEach(s),j=$(w," file:"),w.forEach(s),g.forEach(s),D=$(n,"\n"),M=a(n,"PRE",{},!1);var dn=t(M);P=a(dn,"CODE",{class:!0},!1);var fn=t(P);C=a(fn,"SPAN",{class:!0},!1);var un=t(C);H=$(un,"// 1. import package"),un.forEach(s),T=$(fn,"\n"),B=a(fn,"SPAN",{class:!0},!1);var vn=t(B);N=$(vn,"const"),vn.forEach(s),O=$(fn," {markdown} = "),L=a(fn,"SPAN",{class:!0},!1);var gn=t(L);Y=$(gn,"require"),gn.forEach(s),_=$(fn,"("),q=a(fn,"SPAN",{class:!0},!1);var $n=t(q);R=$($n,"'svelte-preprocess-markdown'"),$n.forEach(s),V=$(fn,");\n\n"),U=a(fn,"SPAN",{class:!0},!1);var wn=t(U);W=$(wn,"export"),wn.forEach(s),F=$(fn," "),K=a(fn,"SPAN",{class:!0},!1);var En=t(K);X=$(En,"default"),En.forEach(s),z=$(fn," {\n  "),J=a(fn,"SPAN",{class:!0},!1);var yn=t(J);Q=$(yn,"// ..."),yn.forEach(s),G=$(fn,"\n  plugins: [\n    svelte({\n      "),Z=a(fn,"SPAN",{class:!0},!1);var kn=t(Z);nn=$(kn,"// 2. add '.md', to the extensions"),kn.forEach(s),en=$(fn,"\n      extensions: ["),rn=a(fn,"SPAN",{class:!0},!1);var xn=t(rn);on=$(xn,"'.svelte'"),xn.forEach(s),an=$(fn,","),tn=a(fn,"SPAN",{class:!0},!1);var bn=t(tn);sn=$(bn,"'.md'"),bn.forEach(s),ln=$(fn,"],\n      "),cn=a(fn,"SPAN",{class:!0},!1);var Sn=t(cn);pn=$(Sn,"// 3. add markdown preprocessor"),Sn.forEach(s),mn=$(fn,"\n      preprocess: markdown()\n    })\n  ]\n}"),fn.forEach(s),dn.forEach(s),this.h()},h(){l(E,"class","hljs language-bash"),l(x,"start","2"),l(C,"class","hljs-comment"),l(B,"class","hljs-keyword"),l(L,"class","hljs-built_in"),l(q,"class","hljs-string"),l(U,"class","hljs-keyword"),l(K,"class","hljs-keyword"),l(J,"class","hljs-comment"),l(Z,"class","hljs-comment"),l(rn,"class","hljs-string"),l(tn,"class","hljs-string"),l(cn,"class","hljs-comment"),l(P,"class","hljs language-js")},m(n,o){c(n,e,o),p(e,r),c(n,m,o),c(n,i,o),p(i,h),p(h,d),c(n,f,o),c(n,u,o),p(u,E),p(E,y),c(n,k,o),c(n,x,o),p(x,b),p(b,S),p(b,A),p(A,I),p(b,j),c(n,D,o),c(n,M,o),p(M,P),p(P,C),p(C,H),p(P,T),p(P,B),p(B,N),p(P,O),p(P,L),p(L,Y),p(P,_),p(P,q),p(q,R),p(P,V),p(P,U),p(U,W),p(P,F),p(P,K),p(K,X),p(P,z),p(P,J),p(J,Q),p(P,G),p(P,Z),p(Z,nn),p(P,en),p(P,rn),p(rn,on),p(P,an),p(P,tn),p(tn,sn),p(P,ln),p(P,cn),p(cn,pn),p(P,mn)},p:w,i:w,o:w,d(n){n&&(s(e),s(m),s(i),s(f),s(u),s(k),s(x),s(D),s(M))}}}function Y(n){var e,r,l,f,u,w,E,y,k,x,b,S,A,j,D,M,N,O,L,Y,_,q,R,V,U,W,F,K,X,z,J,Q,G,Z,nn,en,rn,on,an,tn,sn,ln=new I({props:{components:P}}),cn=new I({props:{components:C}}),pn=new I({props:{components:H}}),mn=new I({props:{components:T}}),hn=new I({props:{components:B}});return{c(){e=o("h1"),r=v("Usage"),l=g(),f=o("h3"),u=v("Simple markup"),w=g(),E=o("p"),y=v("First of all "),k=o("code"),x=v("MDSv"),b=v(" is markdown format. The simplest component is just a markdown synatax without any Svelte's magic."),S=g(),ln.$$.fragment.c(),A=g(),j=o("h3"),D=v("Components"),M=g(),N=o("p"),O=v("You can mix svelte and markdown as you want:"),L=g(),cn.$$.fragment.c(),Y=g(),_=o("h3"),q=v("Imports"),R=g(),V=o("p"),U=v("Import components and use it as usual:"),W=g(),pn.$$.fragment.c(),F=g(),K=o("p"),X=v("Import other "),z=o("code"),J=v("*.md"),Q=v(" files as well:"),G=g(),mn.$$.fragment.c(),Z=g(),nn=o("p"),en=v("If there are only imports in the "),rn=o("code"),on=v("<script>"),an=v(" tag, you may use simplified imports:"),tn=g(),hn.$$.fragment.c()},l(n){e=a(n,"H1",{},!1);var o=t(e);r=$(o,"Usage"),o.forEach(s),l=$(n,"\n"),f=a(n,"H3",{},!1);var c=t(f);u=$(c,"Simple markup"),c.forEach(s),w=$(n,"\n"),E=a(n,"P",{},!1);var p=t(E);y=$(p,"First of all "),k=a(p,"CODE",{},!1);var m=t(k);x=$(m,"MDSv"),m.forEach(s),b=$(p," is markdown format. The simplest component is just a markdown synatax without any Svelte's magic."),p.forEach(s),S=$(n,"\n"),ln.$$.fragment.l(n),A=$(n,"\n"),j=a(n,"H3",{},!1);var i=t(j);D=$(i,"Components"),i.forEach(s),M=$(n,"\n"),N=a(n,"P",{},!1);var h=t(N);O=$(h,"You can mix svelte and markdown as you want:"),h.forEach(s),L=$(n,"\n"),cn.$$.fragment.l(n),Y=$(n,"\n"),_=a(n,"H3",{},!1);var d=t(_);q=$(d,"Imports"),d.forEach(s),R=$(n,"\n"),V=a(n,"P",{},!1);var v=t(V);U=$(v,"Import components and use it as usual:"),v.forEach(s),W=$(n,"\n"),pn.$$.fragment.l(n),F=$(n,"\n"),K=a(n,"P",{},!1);var g=t(K);X=$(g,"Import other "),z=a(g,"CODE",{},!1);var I=t(z);J=$(I,"*.md"),I.forEach(s),Q=$(g," files as well:"),g.forEach(s),G=$(n,"\n"),mn.$$.fragment.l(n),Z=$(n,"\n"),nn=a(n,"P",{},!1);var P=t(nn);en=$(P,"If there are only imports in the "),rn=a(P,"CODE",{},!1);var C=t(rn);on=$(C,"<script>"),C.forEach(s),an=$(P," tag, you may use simplified imports:"),P.forEach(s),tn=$(n,"\n"),hn.$$.fragment.l(n)},m(n,o){c(n,e,o),p(e,r),c(n,l,o),c(n,f,o),p(f,u),c(n,w,o),c(n,E,o),p(E,y),p(E,k),p(k,x),p(E,b),c(n,S,o),m(ln,n,o),c(n,A,o),c(n,j,o),p(j,D),c(n,M,o),c(n,N,o),p(N,O),c(n,L,o),m(cn,n,o),c(n,Y,o),c(n,_,o),p(_,q),c(n,R,o),c(n,V,o),p(V,U),c(n,W,o),m(pn,n,o),c(n,F,o),c(n,K,o),p(K,X),p(K,z),p(z,J),p(K,Q),c(n,G,o),m(mn,n,o),c(n,Z,o),c(n,nn,o),p(nn,en),p(nn,rn),p(rn,on),p(nn,an),c(n,tn,o),m(hn,n,o),sn=!0},p(n,e){var r={};n.Example2&&(r.components=P),ln.$set(r);var o={};n.Example3&&(o.components=C),cn.$set(o);var a={};n.Example4&&(a.components=H),pn.$set(a);var t={};n.Example5&&(t.components=T),mn.$set(t);var s={};n.Example6&&(s.components=B),hn.$set(s)},i(n){sn||(i(ln.$$.fragment,n),i(cn.$$.fragment,n),i(pn.$$.fragment,n),i(mn.$$.fragment,n),i(hn.$$.fragment,n),sn=!0)},o(n){h(ln.$$.fragment,n),h(cn.$$.fragment,n),h(pn.$$.fragment,n),h(mn.$$.fragment,n),h(hn.$$.fragment,n),sn=!1},d(n){n&&(s(e),s(l),s(f),s(w),s(E),s(S)),d(ln,n),n&&(s(A),s(j),s(M),s(N),s(L)),d(cn,n),n&&(s(Y),s(_),s(R),s(V),s(W)),d(pn,n),n&&(s(F),s(K),s(G)),d(mn,n),n&&(s(Z),s(nn),s(tn)),d(hn,n)}}}function _(n){var e,r,f,u,w,E,y,k,x,b,S,A,j=new I({props:{components:N}});return{c(){e=o("h1"),r=v("Styling"),f=g(),u=o("p"),w=o("em"),E=v("Markdown"),y=v(" is being converted to the simple HTML-elements. If you want to style markdown markup, you should write selectors to corresponding HTML-elements. See the "),k=o("a"),x=v("Markdown"),b=v(" guide for more info."),S=g(),j.$$.fragment.c(),this.h()},l(n){e=a(n,"H1",{},!1);var o=t(e);r=$(o,"Styling"),o.forEach(s),f=$(n,"\n"),u=a(n,"P",{},!1);var l=t(u);w=a(l,"EM",{},!1);var c=t(w);E=$(c,"Markdown"),c.forEach(s),y=$(l," is being converted to the simple HTML-elements. If you want to style markdown markup, you should write selectors to corresponding HTML-elements. See the "),k=a(l,"A",{href:!0},!1);var p=t(k);x=$(p,"Markdown"),p.forEach(s),b=$(l," guide for more info."),l.forEach(s),S=$(n,"\n"),j.$$.fragment.l(n),this.h()},h(){l(k,"href","https://www.markdownguide.org/basic-syntax/")},m(n,o){c(n,e,o),p(e,r),c(n,f,o),c(n,u,o),p(u,w),p(w,E),p(u,y),p(u,k),p(k,x),p(u,b),c(n,S,o),m(j,n,o),A=!0},p(n,e){var r={};n.Example7&&(r.components=N),j.$set(r)},i(n){A||(i(j.$$.fragment,n),A=!0)},o(n){h(j.$$.fragment,n),A=!1},d(n){n&&(s(e),s(f),s(u),s(S)),d(j,n)}}}var q=[class extends n{constructor(n){super(),e(this,n,null,O,r,[])}},class extends n{constructor(n){super(),e(this,n,null,L,r,[])}},class extends n{constructor(n){super(),e(this,n,null,Y,r,[])}},class extends n{constructor(n){super(),e(this,n,null,_,r,[])}}];function R(n,e,r){const o=Object.create(n);return o.page=e[r],o}function V(n){var e,r,p,f=n.page;if(f)var u=new f({});return{c(){u&&u.$$.fragment.c(),e=g(),r=o("div"),this.h()},l(n){u&&u.$$.fragment.l(n),e=$(n,"\n    "),r=a(n,"DIV",{class:!0},!1),t(r).forEach(s),this.h()},h(){l(r,"class","svelte-mvq4nw")},m(n,o){u&&m(u,n,o),c(n,e,o),c(n,r,o),p=!0},p(n,r){if(f!==(f=r.page)){if(u){E();const n=u;h(n.$$.fragment,1,0,()=>{d(n,1)}),y()}f?((u=new f({})).$$.fragment.c(),i(u.$$.fragment,1),m(u,e.parentNode,e)):u=null}},i(n){p||(u&&i(u.$$.fragment,n),p=!0)},o(n){u&&h(u.$$.fragment,n),p=!1},d(n){u&&d(u,n),n&&(s(e),s(r))}}}function U(n){for(var e,r,o=q,a=[],t=0;t<o.length;t+=1)a[t]=V(R(n,o,t));const l=n=>h(a[n],1,1,()=>{a[n]=null});return{c(){for(var n=0;n<a.length;n+=1)a[n].c();e=k()},l(n){for(var r=0;r<a.length;r+=1)a[r].l(n);e=k()},m(n,o){for(var t=0;t<a.length;t+=1)a[t].m(n,o);c(n,e,o),r=!0},p(n,r){if(n.pages){o=q;for(var t=0;t<o.length;t+=1){const s=R(r,o,t);a[t]?(a[t].p(n,s),i(a[t],1)):(a[t]=V(s),a[t].c(),i(a[t],1),a[t].m(e.parentNode,e))}for(E(),t=o.length;t<a.length;t+=1)l(t);y()}},i(n){if(!r){for(var e=0;e<o.length;e+=1)i(a[e]);r=!0}},o(n){a=a.filter(Boolean);for(let n=0;n<a.length;n+=1)h(a[n]);r=!1},d(n){x(a,n),n&&s(e)}}}class W extends n{constructor(n){super(),e(this,n,null,U,r,[])}}function F(n){var e,r,p=new W({});return{c(){e=o("div"),p.$$.fragment.c(),this.h()},l(n){e=a(n,"DIV",{class:!0},!1);var r=t(e);p.$$.fragment.l(r),r.forEach(s),this.h()},h(){l(e,"class","svelte-qau3fm")},m(n,o){c(n,e,o),m(p,e,null),r=!0},p:w,i(n){r||(i(p.$$.fragment,n),r=!0)},o(n){h(p.$$.fragment,n),r=!1},d(n){n&&s(e),d(p)}}}export default class extends n{constructor(n){super(),e(this,n,null,F,r,[])}}
