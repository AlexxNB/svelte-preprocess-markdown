import { S as SvelteComponent, i as init, s as safe_not_equal, x as create_component, y as claim_component, z as mount_component, o as transition_in, p as transition_out, C as destroy_component, Q as onMount, J as binding_callbacks } from './index.4682b6d0.js';
import { R as Repl } from './Repl.7df8e6e9.js';
import './commonjsHelpers.6c54ee37.js';

/* src/routes/playground/index.svelte generated by Svelte v3.18.2 */

function create_fragment(ctx) {
	let current;
	let repl_1_props = {};
	const repl_1 = new Repl({ props: repl_1_props });
	/*repl_1_binding*/ ctx[2](repl_1);

	return {
		c() {
			create_component(repl_1.$$.fragment);
		},
		l(nodes) {
			claim_component(repl_1.$$.fragment, nodes);
		},
		m(target, anchor) {
			mount_component(repl_1, target, anchor);
			current = true;
		},
		p(ctx, [dirty]) {
			const repl_1_changes = {};
			repl_1.$set(repl_1_changes);
		},
		i(local) {
			if (current) return;
			transition_in(repl_1.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(repl_1.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			/*repl_1_binding*/ ctx[2](null);
			destroy_component(repl_1, detaching);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let repl;

	const code_1 = `
# Hello World!
`;

	onMount(() => {
		repl.set({
			components: [{ type: "md", name: "App", source: code_1 }]
		});
	});

	function repl_1_binding($$value) {
		binding_callbacks[$$value ? "unshift" : "push"](() => {
			$$invalidate(0, repl = $$value);
		});
	}

	return [repl, code_1, repl_1_binding];
}

class Playground extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, {});
	}
}

export default Playground;
