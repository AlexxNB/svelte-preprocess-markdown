import{S as n,i as e,s as a,e as r,b as o,d as t,g as s,h as l,j as c,k as p,v as m,n as i,o as h,x as d,K as f,C as u,t as v,a as g,f as $,r as E,z as w,A as y,q as k,N as x}from"./index.3cd0a8cf.js";import{R as b}from"./Repl.bfeaa523.js";import"./commonjsHelpers.7e9f9d63.js";function A(n){var e,a,f;let u={orientation:"rows",readonly:n.readonly,embedded:!0};var v=new b({props:u});return n.repl_1_binding(v),{c(){e=r("div"),a=r("div"),v.$$.fragment.c(),this.h()},l(n){e=o(n,"DIV",{class:!0},!1);var r=t(e);a=o(r,"DIV",{class:!0},!1);var l=t(a);v.$$.fragment.l(l),l.forEach(s),r.forEach(s),this.h()},h(){l(a,"class","repl svelte-cgg22k"),l(e,"class","container svelte-cgg22k")},m(n,r){c(n,e,r),p(e,a),m(v,a,null),f=!0},p(n,e){var a={};n.readonly&&(a.readonly=e.readonly),v.$set(a)},i(n){f||(i(v.$$.fragment,n),f=!0)},o(n){h(v.$$.fragment,n),f=!1},d(a){a&&s(e),n.repl_1_binding(null),d(v)}}}function S(n,e,a){let r,{code:o="# Hello World!",readonly:t=!1,components:s=[{type:"md",name:"App",source:"# Hello World!"}]}=e;return a("components",s=s.map(n=>(n.source=n.source.trim(),n))),f(()=>{r.set({components:s})}),n.$set=(n=>{"code"in n&&a("code",o=n.code),"readonly"in n&&a("readonly",t=n.readonly),"components"in n&&a("components",s=n.components)}),{repl:r,code:o,readonly:t,components:s,repl_1_binding:function(n){u[n?"unshift":"push"](()=>{a("repl",r=n)})}}}class M extends n{constructor(n){super(),e(this,n,S,A,a,["code","readonly","components"])}}let I={type:"svelte",name:"Counter",source:'\n<script>\nlet count = 0;\n<\/script>\n\n<span class="counter">\n<span class="minus" on:click={e => count--}>-</span>\n<span class="value">{count}</span>\n<span class="plus" on:click={e => count++}>+</span>\n</span>\n\n<style>\n.counter{\nbackground-color: #f9ac00;\npadding: 2px;\nborder-radius:5px;\n}\n\n.value{\ndisplay: inline-block;\nbackground-color: white;\ntext-align: center;\npadding:0 5px;\nborder-radius:5px;\ncolor: black;\n}\n\n.minus,.plus{\ndisplay: inline-block;\ncolor: white;\nwidth:15px;\ntext-align: center;\nfont-weight: bold;\ncursor:pointer;\n}\n</style>\n'},D={type:"svelte",name:"Box",source:'\n<script>\nexport let color = "black";\n<\/script>\n\n<div style="background-color:{color}"><slot /></div>\n\n<style>\ndiv{\n  color: white;\n  border-radius:5px;\n  padding: 20px;\n  text-align: center;\n}\n</style>\n'};const j=[{type:"md",name:"App",source:"\n<script>\nlet name = 'World'\n<\/script>\n# Hello {name}!"}],P=[{type:"md",name:"App",source:"\n## Simplest component\n\nYou can write **any** `markdown` you want.\n\n|ID|Name|\n|--|----|\n|1 |John|\n"}],C=[{type:"md",name:"App",source:"\n<script>\n  let list = ['item0','item1'];\n  function add() { list = [...list,'item'+list.length] }\n  function del() { list = list.slice(0,-1) }\n<\/script>\n\n### My items\n\n{#each list as item}\n* {item}\n{/each}\n\n<button on:click={add}>Add Item</button>\n<button on:click={del}>Del Item</button>\n"}],T=[{type:"md",name:"App",source:"\n<script>\n  import Counter from './Counter.svelte'\n  import Box from './Box.svelte'\n<\/script>\n\n<Box color=\"orange\">\n   Hello, I'm **orange** box\n</Box>\n\nYou could inline <Counter /> components as well.\n"},I,D],H=[{type:"md",name:"App",source:"\n<script>\n  import Box from './Box.svelte';\n  import Submarkup from './Submarkup.md';\n<\/script>\n\n<Box color=\"slateblue\">\n   <Submarkup />\n</Box>\n"},{type:"md",name:"Submarkup",source:"\n# Hello\n\nI'm **blue** box\n"},D],O=[{type:"md",name:"App",source:"\nimport Counter from './Counter.svelte'\nimport Box from './Box.svelte'\n\n<Box color=\"silver\">\n   Hello, I'm **grey** box. Counter: <Counter />\n</Box>\n"},I,D],B=[{type:"md",name:"App",source:"\n# `h1` heading\n...\n##### `h5` heading\n\n*`em`* **`strong`**\n\n<style>\n  h1{\n    color:green;\n  }\n\n  strong{\n    color:red\n  }\n</style>\n"}],N=[{type:"md",name:"App",source:'\n---\ntitle: This is a title\nnumber: 100500\nlist: [1,2,3,"four","five"]\n---\n\n# {META.title}\n\nThe number is: {META.number}\n\n{#each META.list as item}\n* {item}\n{/each}\n'}];function L(n){var e,a,f,u,E,w,y,k,x,b,A,S,I,D,P,C,T,H,O,B,N,L,Y,_,q,R,V,U,W,F,K,X,z,J,Q,G,Z,nn,en,an,rn,on,tn,sn,ln,cn,pn,mn,hn,dn=new M({props:{components:j}});return{c(){e=r("h1"),a=v("Introducing"),f=g(),u=r("p"),E=v("The "),w=r("a"),y=v("svelte-preprocess-markdown"),k=v(" is a way to use "),x=r("a"),b=v("Svelte"),A=v(" components written in Markdown syntax. You can import any "),S=r("code"),I=v("*.md"),D=v(" file as a component, which will be handeled by Svelte's compiler. You can import any other component in your "),P=r("code"),C=v("*.md"),T=v(" file and use it right inside a markup. All "),H=r("a"),O=v("HTMLx"),B=v(" logic and interpolations are also supported."),N=g(),L=r("p"),Y=v("The format of the "),_=r("em"),q=v("MarkDown"),R=v(" and "),V=r("em"),U=v("Svelte"),W=v(" combination is called "),F=r("code"),K=v("MDSv"),X=v(". It is like React's "),z=r("a"),J=v("MDX"),Q=v(" format, but for "),G=r("a"),Z=v("Svelte"),nn=v("."),en=g(),dn.$$.fragment.c(),an=g(),rn=r("blockquote"),on=r("p"),tn=v("You can try "),sn=r("code"),ln=v("svelte-preprocess-markdown"),cn=v(" in the fullpage "),pn=r("a"),mn=v("Playground"),this.h()},l(n){e=o(n,"H1",{},!1);var r=t(e);a=$(r,"Introducing"),r.forEach(s),f=$(n,"\n"),u=o(n,"P",{},!1);var l=t(u);E=$(l,"The "),w=o(l,"A",{href:!0},!1);var c=t(w);y=$(c,"svelte-preprocess-markdown"),c.forEach(s),k=$(l," is a way to use "),x=o(l,"A",{href:!0},!1);var p=t(x);b=$(p,"Svelte"),p.forEach(s),A=$(l," components written in Markdown syntax. You can import any "),S=o(l,"CODE",{},!1);var m=t(S);I=$(m,"*.md"),m.forEach(s),D=$(l," file as a component, which will be handeled by Svelte's compiler. You can import any other component in your "),P=o(l,"CODE",{},!1);var i=t(P);C=$(i,"*.md"),i.forEach(s),T=$(l," file and use it right inside a markup. All "),H=o(l,"A",{href:!0},!1);var h=t(H);O=$(h,"HTMLx"),h.forEach(s),B=$(l," logic and interpolations are also supported."),l.forEach(s),N=$(n,"\n"),L=o(n,"P",{},!1);var d=t(L);Y=$(d,"The format of the "),_=o(d,"EM",{},!1);var v=t(_);q=$(v,"MarkDown"),v.forEach(s),R=$(d," and "),V=o(d,"EM",{},!1);var g=t(V);U=$(g,"Svelte"),g.forEach(s),W=$(d," combination is called "),F=o(d,"CODE",{},!1);var M=t(F);K=$(M,"MDSv"),M.forEach(s),X=$(d,". It is like React's "),z=o(d,"A",{href:!0},!1);var j=t(z);J=$(j,"MDX"),j.forEach(s),Q=$(d," format, but for "),G=o(d,"A",{href:!0},!1);var hn=t(G);Z=$(hn,"Svelte"),hn.forEach(s),nn=$(d,"."),d.forEach(s),en=$(n,"\n"),dn.$$.fragment.l(n),an=$(n,"\n"),rn=o(n,"BLOCKQUOTE",{},!1);var fn=t(rn);on=o(fn,"P",{},!1);var un=t(on);tn=$(un,"You can try "),sn=o(un,"CODE",{},!1);var vn=t(sn);ln=$(vn,"svelte-preprocess-markdown"),vn.forEach(s),cn=$(un," in the fullpage "),pn=o(un,"A",{href:!0},!1);var gn=t(pn);mn=$(gn,"Playground"),gn.forEach(s),un.forEach(s),fn.forEach(s),this.h()},h(){l(w,"href","https://www.npmjs.com/package/svelte-preprocess-markdown"),l(x,"href","https://svelte.dev"),l(H,"href","https://github.com/htmlx-org/HTMLx"),l(z,"href","https://mdxjs.com/"),l(G,"href","https://svelte.dev"),l(pn,"href","/playground")},m(n,r){c(n,e,r),p(e,a),c(n,f,r),c(n,u,r),p(u,E),p(u,w),p(w,y),p(u,k),p(u,x),p(x,b),p(u,A),p(u,S),p(S,I),p(u,D),p(u,P),p(P,C),p(u,T),p(u,H),p(H,O),p(u,B),c(n,N,r),c(n,L,r),p(L,Y),p(L,_),p(_,q),p(L,R),p(L,V),p(V,U),p(L,W),p(L,F),p(F,K),p(L,X),p(L,z),p(z,J),p(L,Q),p(L,G),p(G,Z),p(L,nn),c(n,en,r),m(dn,n,r),c(n,an,r),c(n,rn,r),p(rn,on),p(on,tn),p(on,sn),p(sn,ln),p(on,cn),p(on,pn),p(pn,mn),hn=!0},p(n,e){var a={};n.Example1&&(a.components=j),dn.$set(a)},i(n){hn||(i(dn.$$.fragment,n),hn=!0)},o(n){h(dn.$$.fragment,n),hn=!1},d(n){n&&(s(e),s(f),s(u),s(N),s(L),s(en)),d(dn,n),n&&(s(an),s(rn))}}}function Y(n){var e,a,m,i,h,d,f,u,w,y,k,x,b,A,S,M,I,D,j,P,C,T,H,O,B,N,L,Y,_,q,R,V,U,W,F,K,X,z,J,Q,G,Z,nn,en,an,rn,on,tn,sn,ln,cn,pn,mn;return{c(){e=r("h1"),a=v("Install"),m=g(),i=r("ol"),h=r("li"),d=v("Install the package:"),f=g(),u=r("pre"),w=r("code"),y=v("npm i -D svelte-preprocess-markdown"),k=g(),x=r("ol"),b=r("li"),A=v("Then, edit "),S=r("code"),M=v("rollup.config.js"),I=v(" file:"),D=g(),j=r("pre"),P=r("code"),C=r("span"),T=v("// 1. import package"),H=v("\n"),O=r("span"),B=v("const"),N=v(" {markdown} = "),L=r("span"),Y=v("require"),_=v("("),q=r("span"),R=v("'svelte-preprocess-markdown'"),V=v(");\n\n"),U=r("span"),W=v("export"),F=v(" "),K=r("span"),X=v("default"),z=v(" {\n  "),J=r("span"),Q=v("// ..."),G=v("\n  plugins: [\n    svelte({\n      "),Z=r("span"),nn=v("// 2. add '.md', to the extensions"),en=v("\n      extensions: ["),an=r("span"),rn=v("'.svelte'"),on=v(","),tn=r("span"),sn=v("'.md'"),ln=v("],\n      "),cn=r("span"),pn=v("// 3. add markdown preprocessor"),mn=v("\n      preprocess: markdown()\n    })\n  ]\n}"),this.h()},l(n){e=o(n,"H1",{},!1);var r=t(e);a=$(r,"Install"),r.forEach(s),m=$(n,"\n"),i=o(n,"OL",{},!1);var l=t(i);h=o(l,"LI",{},!1);var c=t(h);d=$(c,"Install the package:"),c.forEach(s),l.forEach(s),f=$(n,"\n"),u=o(n,"PRE",{},!1);var p=t(u);w=o(p,"CODE",{class:!0},!1);var v=t(w);y=$(v,"npm i -D svelte-preprocess-markdown"),v.forEach(s),p.forEach(s),k=$(n,"\n\n"),x=o(n,"OL",{start:!0},!1);var g=t(x);b=o(g,"LI",{},!1);var E=t(b);A=$(E,"Then, edit "),S=o(E,"CODE",{},!1);var hn=t(S);M=$(hn,"rollup.config.js"),hn.forEach(s),I=$(E," file:"),E.forEach(s),g.forEach(s),D=$(n,"\n"),j=o(n,"PRE",{},!1);var dn=t(j);P=o(dn,"CODE",{class:!0},!1);var fn=t(P);C=o(fn,"SPAN",{class:!0},!1);var un=t(C);T=$(un,"// 1. import package"),un.forEach(s),H=$(fn,"\n"),O=o(fn,"SPAN",{class:!0},!1);var vn=t(O);B=$(vn,"const"),vn.forEach(s),N=$(fn," {markdown} = "),L=o(fn,"SPAN",{class:!0},!1);var gn=t(L);Y=$(gn,"require"),gn.forEach(s),_=$(fn,"("),q=o(fn,"SPAN",{class:!0},!1);var $n=t(q);R=$($n,"'svelte-preprocess-markdown'"),$n.forEach(s),V=$(fn,");\n\n"),U=o(fn,"SPAN",{class:!0},!1);var En=t(U);W=$(En,"export"),En.forEach(s),F=$(fn," "),K=o(fn,"SPAN",{class:!0},!1);var wn=t(K);X=$(wn,"default"),wn.forEach(s),z=$(fn," {\n  "),J=o(fn,"SPAN",{class:!0},!1);var yn=t(J);Q=$(yn,"// ..."),yn.forEach(s),G=$(fn,"\n  plugins: [\n    svelte({\n      "),Z=o(fn,"SPAN",{class:!0},!1);var kn=t(Z);nn=$(kn,"// 2. add '.md', to the extensions"),kn.forEach(s),en=$(fn,"\n      extensions: ["),an=o(fn,"SPAN",{class:!0},!1);var xn=t(an);rn=$(xn,"'.svelte'"),xn.forEach(s),on=$(fn,","),tn=o(fn,"SPAN",{class:!0},!1);var bn=t(tn);sn=$(bn,"'.md'"),bn.forEach(s),ln=$(fn,"],\n      "),cn=o(fn,"SPAN",{class:!0},!1);var An=t(cn);pn=$(An,"// 3. add markdown preprocessor"),An.forEach(s),mn=$(fn,"\n      preprocess: markdown()\n    })\n  ]\n}"),fn.forEach(s),dn.forEach(s),this.h()},h(){l(w,"class","hljs language-bash"),l(x,"start","2"),l(C,"class","hljs-comment"),l(O,"class","hljs-keyword"),l(L,"class","hljs-built_in"),l(q,"class","hljs-string"),l(U,"class","hljs-keyword"),l(K,"class","hljs-keyword"),l(J,"class","hljs-comment"),l(Z,"class","hljs-comment"),l(an,"class","hljs-string"),l(tn,"class","hljs-string"),l(cn,"class","hljs-comment"),l(P,"class","hljs language-js")},m(n,r){c(n,e,r),p(e,a),c(n,m,r),c(n,i,r),p(i,h),p(h,d),c(n,f,r),c(n,u,r),p(u,w),p(w,y),c(n,k,r),c(n,x,r),p(x,b),p(b,A),p(b,S),p(S,M),p(b,I),c(n,D,r),c(n,j,r),p(j,P),p(P,C),p(C,T),p(P,H),p(P,O),p(O,B),p(P,N),p(P,L),p(L,Y),p(P,_),p(P,q),p(q,R),p(P,V),p(P,U),p(U,W),p(P,F),p(P,K),p(K,X),p(P,z),p(P,J),p(J,Q),p(P,G),p(P,Z),p(Z,nn),p(P,en),p(P,an),p(an,rn),p(P,on),p(P,tn),p(tn,sn),p(P,ln),p(P,cn),p(cn,pn),p(P,mn)},p:E,i:E,o:E,d(n){n&&(s(e),s(m),s(i),s(f),s(u),s(k),s(x),s(D),s(j))}}}function _(n){var e,a,l,f,u,E,w,y,k,x,b,A,S,I,D,j,B,L,Y,_,q,R,V,U,W,F,K,X,z,J,Q,G,Z,nn,en,an,rn,on,tn,sn,ln,cn,pn,mn,hn,dn,fn,un,vn,gn,$n,En,wn,yn,kn=new M({props:{components:P}}),xn=new M({props:{components:C}}),bn=new M({props:{components:T}}),An=new M({props:{components:H}}),Sn=new M({props:{components:O}}),Mn=new M({props:{components:N}});return{c(){e=r("h1"),a=v("Usage"),l=g(),f=r("h3"),u=v("Simple markup"),E=g(),w=r("p"),y=v("First of all "),k=r("code"),x=v("MDSv"),b=v(" is markdown format. The simplest component is just a markdown synatax without any Svelte's magic."),A=g(),kn.$$.fragment.c(),S=g(),I=r("h3"),D=v("Components"),j=g(),B=r("p"),L=v("You can mix svelte and markdown as you want:"),Y=g(),xn.$$.fragment.c(),_=g(),q=r("h3"),R=v("Imports"),V=g(),U=r("p"),W=v("Import components and use it as usual:"),F=g(),bn.$$.fragment.c(),K=g(),X=r("p"),z=v("Import other "),J=r("code"),Q=v("*.md"),G=v(" files as well:"),Z=g(),An.$$.fragment.c(),nn=g(),en=r("p"),an=v("If there are only imports in the "),rn=r("code"),on=v("<script>"),tn=v(" tag, you may use simplified imports:"),sn=g(),Sn.$$.fragment.c(),ln=g(),cn=r("h3"),pn=v("Metadata"),mn=g(),hn=r("p"),dn=v("You can add some metadata at the top of the "),fn=r("em"),un=v("*.md"),vn=v(" file. All metadata will be available in "),gn=r("code"),$n=v("META"),En=v(" constant:"),wn=g(),Mn.$$.fragment.c()},l(n){e=o(n,"H1",{},!1);var r=t(e);a=$(r,"Usage"),r.forEach(s),l=$(n,"\n"),f=o(n,"H3",{},!1);var c=t(f);u=$(c,"Simple markup"),c.forEach(s),E=$(n,"\n"),w=o(n,"P",{},!1);var p=t(w);y=$(p,"First of all "),k=o(p,"CODE",{},!1);var m=t(k);x=$(m,"MDSv"),m.forEach(s),b=$(p," is markdown format. The simplest component is just a markdown synatax without any Svelte's magic."),p.forEach(s),A=$(n,"\n"),kn.$$.fragment.l(n),S=$(n,"\n"),I=o(n,"H3",{},!1);var i=t(I);D=$(i,"Components"),i.forEach(s),j=$(n,"\n"),B=o(n,"P",{},!1);var h=t(B);L=$(h,"You can mix svelte and markdown as you want:"),h.forEach(s),Y=$(n,"\n"),xn.$$.fragment.l(n),_=$(n,"\n"),q=o(n,"H3",{},!1);var d=t(q);R=$(d,"Imports"),d.forEach(s),V=$(n,"\n"),U=o(n,"P",{},!1);var v=t(U);W=$(v,"Import components and use it as usual:"),v.forEach(s),F=$(n,"\n"),bn.$$.fragment.l(n),K=$(n,"\n"),X=o(n,"P",{},!1);var g=t(X);z=$(g,"Import other "),J=o(g,"CODE",{},!1);var M=t(J);Q=$(M,"*.md"),M.forEach(s),G=$(g," files as well:"),g.forEach(s),Z=$(n,"\n"),An.$$.fragment.l(n),nn=$(n,"\n"),en=o(n,"P",{},!1);var P=t(en);an=$(P,"If there are only imports in the "),rn=o(P,"CODE",{},!1);var C=t(rn);on=$(C,"<script>"),C.forEach(s),tn=$(P," tag, you may use simplified imports:"),P.forEach(s),sn=$(n,"\n"),Sn.$$.fragment.l(n),ln=$(n,"\n"),cn=o(n,"H3",{},!1);var T=t(cn);pn=$(T,"Metadata"),T.forEach(s),mn=$(n,"\n"),hn=o(n,"P",{},!1);var H=t(hn);dn=$(H,"You can add some metadata at the top of the "),fn=o(H,"EM",{},!1);var O=t(fn);un=$(O,"*.md"),O.forEach(s),vn=$(H," file. All metadata will be available in "),gn=o(H,"CODE",{},!1);var N=t(gn);$n=$(N,"META"),N.forEach(s),En=$(H," constant:"),H.forEach(s),wn=$(n,"\n"),Mn.$$.fragment.l(n)},m(n,r){c(n,e,r),p(e,a),c(n,l,r),c(n,f,r),p(f,u),c(n,E,r),c(n,w,r),p(w,y),p(w,k),p(k,x),p(w,b),c(n,A,r),m(kn,n,r),c(n,S,r),c(n,I,r),p(I,D),c(n,j,r),c(n,B,r),p(B,L),c(n,Y,r),m(xn,n,r),c(n,_,r),c(n,q,r),p(q,R),c(n,V,r),c(n,U,r),p(U,W),c(n,F,r),m(bn,n,r),c(n,K,r),c(n,X,r),p(X,z),p(X,J),p(J,Q),p(X,G),c(n,Z,r),m(An,n,r),c(n,nn,r),c(n,en,r),p(en,an),p(en,rn),p(rn,on),p(en,tn),c(n,sn,r),m(Sn,n,r),c(n,ln,r),c(n,cn,r),p(cn,pn),c(n,mn,r),c(n,hn,r),p(hn,dn),p(hn,fn),p(fn,un),p(hn,vn),p(hn,gn),p(gn,$n),p(hn,En),c(n,wn,r),m(Mn,n,r),yn=!0},p(n,e){var a={};n.Example2&&(a.components=P),kn.$set(a);var r={};n.Example3&&(r.components=C),xn.$set(r);var o={};n.Example4&&(o.components=T),bn.$set(o);var t={};n.Example5&&(t.components=H),An.$set(t);var s={};n.Example6&&(s.components=O),Sn.$set(s);var l={};n.Example8&&(l.components=N),Mn.$set(l)},i(n){yn||(i(kn.$$.fragment,n),i(xn.$$.fragment,n),i(bn.$$.fragment,n),i(An.$$.fragment,n),i(Sn.$$.fragment,n),i(Mn.$$.fragment,n),yn=!0)},o(n){h(kn.$$.fragment,n),h(xn.$$.fragment,n),h(bn.$$.fragment,n),h(An.$$.fragment,n),h(Sn.$$.fragment,n),h(Mn.$$.fragment,n),yn=!1},d(n){n&&(s(e),s(l),s(f),s(E),s(w),s(A)),d(kn,n),n&&(s(S),s(I),s(j),s(B),s(Y)),d(xn,n),n&&(s(_),s(q),s(V),s(U),s(F)),d(bn,n),n&&(s(K),s(X),s(Z)),d(An,n),n&&(s(nn),s(en),s(sn)),d(Sn,n),n&&(s(ln),s(cn),s(mn),s(hn),s(wn)),d(Mn,n)}}}function q(n){var e,a,f,u,E,w,y,k,x,b,A,S,I=new M({props:{components:B}});return{c(){e=r("h1"),a=v("Styling"),f=g(),u=r("p"),E=r("em"),w=v("Markdown"),y=v(" is being converted to the simple HTML-elements. If you want to style markdown markup, you should write selectors to corresponding HTML-elements. See the "),k=r("a"),x=v("Markdown"),b=v(" guide for more info."),A=g(),I.$$.fragment.c(),this.h()},l(n){e=o(n,"H1",{},!1);var r=t(e);a=$(r,"Styling"),r.forEach(s),f=$(n,"\n"),u=o(n,"P",{},!1);var l=t(u);E=o(l,"EM",{},!1);var c=t(E);w=$(c,"Markdown"),c.forEach(s),y=$(l," is being converted to the simple HTML-elements. If you want to style markdown markup, you should write selectors to corresponding HTML-elements. See the "),k=o(l,"A",{href:!0},!1);var p=t(k);x=$(p,"Markdown"),p.forEach(s),b=$(l," guide for more info."),l.forEach(s),A=$(n,"\n"),I.$$.fragment.l(n),this.h()},h(){l(k,"href","https://www.markdownguide.org/basic-syntax/")},m(n,r){c(n,e,r),p(e,a),c(n,f,r),c(n,u,r),p(u,E),p(E,w),p(u,y),p(u,k),p(k,x),p(u,b),c(n,A,r),m(I,n,r),S=!0},p(n,e){var a={};n.Example7&&(a.components=B),I.$set(a)},i(n){S||(i(I.$$.fragment,n),S=!0)},o(n){h(I.$$.fragment,n),S=!1},d(n){n&&(s(e),s(f),s(u),s(A)),d(I,n)}}}var R=[class extends n{constructor(n){super(),e(this,n,null,L,a,[])}},class extends n{constructor(n){super(),e(this,n,null,Y,a,[])}},class extends n{constructor(n){super(),e(this,n,null,_,a,[])}},class extends n{constructor(n){super(),e(this,n,null,q,a,[])}}];function V(n,e,a){const r=Object.create(n);return r.page=e[a],r}function U(n){var e,a,p,f=n.page;if(f)var u=new f({});return{c(){u&&u.$$.fragment.c(),e=g(),a=r("div"),this.h()},l(n){u&&u.$$.fragment.l(n),e=$(n,"\n    "),a=o(n,"DIV",{class:!0},!1),t(a).forEach(s),this.h()},h(){l(a,"class","svelte-mvq4nw")},m(n,r){u&&m(u,n,r),c(n,e,r),c(n,a,r),p=!0},p(n,a){if(f!==(f=a.page)){if(u){w();const n=u;h(n.$$.fragment,1,0,()=>{d(n,1)}),y()}f?((u=new f({})).$$.fragment.c(),i(u.$$.fragment,1),m(u,e.parentNode,e)):u=null}},i(n){p||(u&&i(u.$$.fragment,n),p=!0)},o(n){u&&h(u.$$.fragment,n),p=!1},d(n){u&&d(u,n),n&&(s(e),s(a))}}}function W(n){for(var e,a,r=R,o=[],t=0;t<r.length;t+=1)o[t]=U(V(n,r,t));const l=n=>h(o[n],1,1,()=>{o[n]=null});return{c(){for(var n=0;n<o.length;n+=1)o[n].c();e=k()},l(n){for(var a=0;a<o.length;a+=1)o[a].l(n);e=k()},m(n,r){for(var t=0;t<o.length;t+=1)o[t].m(n,r);c(n,e,r),a=!0},p(n,a){if(n.pages){r=R;for(var t=0;t<r.length;t+=1){const s=V(a,r,t);o[t]?(o[t].p(n,s),i(o[t],1)):(o[t]=U(s),o[t].c(),i(o[t],1),o[t].m(e.parentNode,e))}for(w(),t=r.length;t<o.length;t+=1)l(t);y()}},i(n){if(!a){for(var e=0;e<r.length;e+=1)i(o[e]);a=!0}},o(n){o=o.filter(Boolean);for(let n=0;n<o.length;n+=1)h(o[n]);a=!1},d(n){x(o,n),n&&s(e)}}}class F extends n{constructor(n){super(),e(this,n,null,W,a,[])}}function K(n){var e,a,p=new F({});return{c(){e=r("div"),p.$$.fragment.c(),this.h()},l(n){e=o(n,"DIV",{class:!0},!1);var a=t(e);p.$$.fragment.l(a),a.forEach(s),this.h()},h(){l(e,"class","svelte-qau3fm")},m(n,r){c(n,e,r),m(p,e,null),a=!0},p:E,i(n){a||(i(p.$$.fragment,n),a=!0)},o(n){h(p.$$.fragment,n),a=!1},d(n){n&&s(e),d(p)}}}export default class extends n{constructor(n){super(),e(this,n,null,K,a,[])}}
